{"version":3,"sources":["node_modules/workbox-core/_version.js","node_modules/workbox-core/models/messages/messages.js","node_modules/workbox-core/models/messages/messageGenerator.js","node_modules/workbox-core/_private/WorkboxError.js","node_modules/workbox-core/_private/assert.js","node_modules/workbox-core/_private/logger.js","node_modules/workbox-routing/_version.js","node_modules/workbox-routing/utils/constants.js","node_modules/workbox-routing/utils/normalizeHandler.js","node_modules/workbox-routing/Route.js","node_modules/workbox-routing/NavigationRoute.js","node_modules/workbox-routing/RegExpRoute.js","node_modules/workbox-core/_private/getFriendlyURL.js","node_modules/workbox-routing/Router.js","node_modules/workbox-routing/utils/getOrCreateDefaultRouter.js","node_modules/workbox-routing/registerRoute.js","node_modules/workbox-routing/setCatchHandler.js","node_modules/workbox-routing/setDefaultHandler.js","node_modules/workbox-routing/index.js","node_modules/workbox-routing/index.mjs","node_modules/workbox-core/_private/cacheNames.js","node_modules/workbox-core/_private/cacheMatchIgnoreParams.js","node_modules/workbox-core/_private/Deferred.js","node_modules/workbox-core/models/quotaErrorCallbacks.js","node_modules/workbox-core/_private/executeQuotaErrorCallbacks.js","node_modules/workbox-core/_private/timeout.js","node_modules/workbox-strategies/_version.js","node_modules/workbox-strategies/StrategyHandler.js","node_modules/workbox-strategies/Strategy.js","node_modules/workbox-strategies/utils/messages.js","node_modules/workbox-strategies/CacheFirst.js","node_modules/workbox-strategies/CacheOnly.js","node_modules/workbox-strategies/plugins/cacheOkAndOpaquePlugin.js","node_modules/workbox-strategies/NetworkFirst.js","node_modules/workbox-strategies/NetworkOnly.js","node_modules/workbox-strategies/StaleWhileRevalidate.js","node_modules/workbox-strategies/index.js","node_modules/workbox-strategies/index.mjs","node_modules/workbox-cacheable-response/_version.js","node_modules/workbox-cacheable-response/CacheableResponse.js","node_modules/workbox-cacheable-response/CacheableResponsePlugin.js","node_modules/workbox-cacheable-response/index.js","node_modules/workbox-cacheable-response/index.mjs","node_modules/workbox-core/_private/dontWaitFor.js","node_modules/workbox-core/_private/DBWrapper.js","node_modules/workbox-core/_private/deleteDatabase.js","node_modules/workbox-expiration/_version.js","node_modules/workbox-expiration/models/CacheTimestampsModel.js","node_modules/workbox-expiration/CacheExpiration.js","node_modules/workbox-core/registerQuotaErrorCallback.js","node_modules/workbox-expiration/ExpirationPlugin.js","node_modules/workbox-expiration/index.js","node_modules/workbox-expiration/index.mjs","node_modules/workbox-range-requests/_version.js","node_modules/workbox-range-requests/utils/calculateEffectiveBoundaries.js","node_modules/workbox-range-requests/utils/parseRangeHeader.js","node_modules/workbox-range-requests/createPartialResponse.js","node_modules/workbox-range-requests/RangeRequestsPlugin.js","node_modules/workbox-range-requests/index.js","node_modules/workbox-range-requests/index.mjs","node_modules/workbox-core/_private/waitUntil.js","node_modules/workbox-precaching/_version.js","node_modules/workbox-precaching/utils/createCacheKey.js","node_modules/workbox-precaching/utils/PrecacheInstallReportPlugin.js","node_modules/workbox-precaching/utils/PrecacheCacheKeyPlugin.js","node_modules/workbox-precaching/utils/printCleanupDetails.js","node_modules/workbox-precaching/utils/printInstallDetails.js","node_modules/workbox-core/_private/canConstructResponseFromBodyStream.js","node_modules/workbox-core/copyResponse.js","node_modules/workbox-precaching/PrecacheStrategy.js","node_modules/workbox-precaching/PrecacheController.js","node_modules/workbox-precaching/utils/getOrCreatePrecacheController.js","node_modules/workbox-precaching/addPlugins.js","node_modules/workbox-precaching/utils/removeIgnoredSearchParams.js","node_modules/workbox-precaching/utils/generateURLVariations.js","node_modules/workbox-precaching/PrecacheRoute.js","node_modules/workbox-precaching/addRoute.js","node_modules/workbox-precaching/utils/deleteOutdatedCaches.js","node_modules/workbox-precaching/cleanupOutdatedCaches.js","node_modules/workbox-precaching/createHandlerBoundToURL.js","node_modules/workbox-precaching/getCacheKeyForURL.js","node_modules/workbox-precaching/matchPrecache.js","node_modules/workbox-precaching/precache.js","node_modules/workbox-precaching/precacheAndRoute.js","node_modules/workbox-precaching/PrecacheFallbackPlugin.js","node_modules/workbox-precaching/index.js","node_modules/workbox-precaching/index.mjs","service_worker.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["messages","paramName","validValueDescription","value","Error","JSON","stringify","moduleName","className","funcName","expectedType","expectedClass","isReturnValueProblem","name","expectedMethod","entry","firstEntry","secondEntry","_entryId","thrownError","message","cacheNameId","method","methodName","normalizedRangeHeader","size","start","end","url","error","status","cacheName","origin","fallback","code","args","msg","length","generatorFunction","details","messageGenerator","WorkboxError","constructor","errorCode","isArray","Array","hasMethod","object","type","isType","isInstance","isOneOf","validValues","includes","isArrayOfClass","item","finalAssertExports","logger","self","__WB_DISABLE_DEV_LOGS","inGroup","methodToColorMap","debug","log","warn","groupCollapsed","groupEnd","print","test","navigator","userAgent","console","styles","logPrefix","join","api","loggerMethods","Object","keys","key","defaultMethod","validMethods","normalizeHandler","handler","assert","handle","Route","match","NavigationRoute","allowlist","denylist","RegExp","options","_match","_allowlist","_denylist","request","mode","pathnameAndSearch","pathname","search","regExp","some","RegExpRoute","result","exec","href","location","index","slice","getFriendlyURL","urlObj","URL","String","replace","Router","_routes","Map","_defaultHandlerMap","routes","addFetchListener","addEventListener","event","responsePromise","handleRequest","respondWith","addCacheListener","data","payload","urlsToCache","requestPromises","Promise","all","map","Request","waitUntil","ports","then","postMessage","protocol","startsWith","sameOrigin","params","route","findMatchingRoute","debugMessages","push","has","get","forEach","err","reject","_catchHandler","catch","matchResult","undefined","setDefaultHandler","set","setCatchHandler","registerRoute","unregisterRoute","routeIndex","indexOf","splice","defaultRouter","getOrCreateDefaultRouter","capture","captureUrl","valueToCheck","wildcards","matchCallback","_cacheNameDetails","googleAnalytics","precache","prefix","runtime","suffix","registration","scope","_createCacheName","filter","eachCacheNameDetail","fn","cacheNames","updateDetails","getGoogleAnalyticsName","userCacheName","getPrecacheName","getPrefix","getRuntimeName","getSuffix","stripParams","fullURL","ignoreParams","strippedURL","param","searchParams","delete","cacheMatchIgnoreParams","cache","matchOptions","strippedRequestURL","keysOptions","ignoreSearch","cacheKeys","cacheKey","strippedCacheKeyURL","Deferred","promise","resolve","quotaErrorCallbacks","Set","executeQuotaErrorCallbacks","callback","timeout","ms","setTimeout","toRequest","input","StrategyHandler","strategy","_cacheKeys","ExtendableEvent","assign","_strategy","_handlerDeferred","_extendLifetimePromises","_plugins","plugins","_pluginStateMap","plugin","fetch","FetchEvent","preloadResponse","possiblePreloadResponse","originalRequest","hasCallback","clone","cb","iterateCallbacks","pluginFilteredRequest","fetchResponse","fetchOptions","response","runCallbacks","fetchAndCachePut","responseClone","cachePut","cacheMatch","cachedResponse","effectiveRequest","getCacheKey","multiMatchOptions","caches","responseToCache","_ensureResponseSafeToCache","open","hasCacheUpdateCallback","oldResponse","put","newResponse","state","statefulCallback","statefulParam","doneWaiting","shift","destroy","pluginsUsed","Strategy","responseDone","handleAll","_getResponse","handlerDone","_awaitComplete","_handle","waitUntilError","strategyStart","strategyName","printFinalResponse","CacheFirst","logs","CacheOnly","cacheOkAndOpaquePlugin","cacheWillUpdate","NetworkFirst","p","unshift","_networkTimeoutSeconds","networkTimeoutSeconds","promises","timeoutId","id","_getTimeoutPromise","networkPromise","_getNetworkPromise","race","timeoutPromise","onNetworkTimeout","fetchError","clearTimeout","NetworkOnly","StaleWhileRevalidate","fetchAndCachePromise","CacheableResponse","config","statuses","headers","_statuses","_headers","isResponseCacheable","Response","cacheable","headerName","logFriendlyHeaders","CacheableResponsePlugin","_cacheableResponse","dontWaitFor","DBWrapper","version","onupgradeneeded","onversionchange","_db","_name","_version","_onupgradeneeded","_onversionchange","close","db","openRequestTimedOut","OPEN_TIMEOUT","openRequest","indexedDB","onerror","evt","transaction","abort","onsuccess","bind","getKey","storeName","query","getAllKeys","getAll","count","getAllMatching","entries","includeKeys","direction","txn","done","store","objectStore","target","results","openCursor","cursor","continue","storeNames","onabort","oncomplete","_call","objStore","apply","prototype","methodsToWrap","readonly","readwrite","methods","IDBObjectStore","deleteDatabase","onblocked","DB_NAME","OBJECT_STORE_NAME","normalizeURL","unNormalizedUrl","hash","CacheTimestampsModel","_cacheName","_handleUpgrade","createObjectStore","keyPath","createIndex","unique","setTimestamp","timestamp","_getId","getTimestamp","expireEntries","minTimestamp","maxCount","entriesToDelete","entriesNotDeletedCount","urlsDeleted","CacheExpiration","_isRunning","_rerunRequested","maxEntries","maxAgeSeconds","_maxEntries","_maxAgeSeconds","_matchOptions","_timestampModel","Date","now","urlsExpired","updateTimestamp","isURLExpired","expireOlderThan","Infinity","registerQuotaErrorCallback","add","ExpirationPlugin","cachedResponseWillBeUsed","isFresh","_isResponseDateFresh","cacheExpiration","_getCacheExpiration","updateTimestampDone","cacheDidUpdate","_config","_cacheExpirations","purgeOnQuotaError","deleteCacheAndMetadata","dateHeaderTimestamp","_getDateHeaderTimestamp","dateHeader","parsedDate","headerTime","getTime","isNaN","calculateEffectiveBoundaries","blob","Blob","blobSize","effectiveStart","effectiveEnd","parseRangeHeader","rangeHeader","trim","toLowerCase","rangeParts","Number","createPartialResponse","originalResponse","boundaries","originalBlob","effectiveBoundaries","slicedBlob","slicedBlobSize","slicedResponse","statusText","RangeRequestsPlugin","asyncFn","returnPromise","REVISION_SEARCH_PARAM","createCacheKey","urlObject","revision","cacheKeyURL","originalURL","PrecacheInstallReportPlugin","updatedURLs","notUpdatedURLs","handlerWillStart","PrecacheCacheKeyPlugin","precacheController","cacheKeyWillBeUsed","_precacheController","getCacheKeyForURL","logGroup","groupTitle","deletedURLs","printCleanupDetails","deletionCount","_nestedGroup","urls","printInstallDetails","urlsToPrecache","urlsAlreadyPrecached","precachedCount","alreadyPrecachedCount","supportStatus","canConstructResponseFromBodyStream","testResponse","body","copyResponse","modifier","responseURL","clonedResponse","responseInit","Headers","modifiedResponseInit","copyRedirectedCacheableResponsesPlugin","redirected","PrecacheStrategy","_fallbackToNetwork","fallbackToNetwork","_handleInstall","_handleFetch","responseSafeToPrecache","Boolean","_usesCustomCacheableResponseLogic","PrecacheController","_urlsToCacheKeys","_urlsToCacheModes","_cacheKeysToIntegrities","install","activate","addToCacheList","_installAndActiveListenersAdded","urlsToWarnAbout","cacheMode","integrity","warningMessage","installReportPlugin","credentials","currentlyCachedRequests","expectedCacheKeys","values","getURLsToCacheKeys","getCachedURLs","matchPrecache","createHandlerBoundToURL","getOrCreatePrecacheController","addPlugins","removeIgnoredSearchParams","ignoreURLParametersMatching","generateURLVariations","directoryIndex","cleanURLs","urlManipulation","urlWithoutIgnoredParams","endsWith","directoryURL","cleanURL","additionalURLs","urlToAttempt","PrecacheRoute","urlsToCacheKeys","possibleURL","addRoute","precacheRoute","SUBSTRING_TO_FIND","deleteOutdatedCaches","currentPrecacheName","substringToFind","cacheNamesToDelete","cleanupOutdatedCaches","cachesDeleted","precacheAndRoute","PrecacheFallbackPlugin","fallbackURL","handlerDidError","_fallbackURL","destination","OVERLAY_ID","OldModule","module","bundle","Module","call","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","ws","onmessage","parse","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","clear","hmrApply","v","hmrAcceptRun","reload","onclose","removeErrorOverlay","stack","overlay","createErrorOverlay","document","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","concat","Function","deps","cached"],"mappings":"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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS6e,aAAT,CAAuBza,OAAvB,EAAgC;AAC5B,QAAMiX,kBAAkB,GAAG,mEAA3B;AACA,SAAOA,kBAAkB,CAACwD,aAAnB,CAAiCza,OAAjC,CAAP;AACH;;;;;;;;;ACpBD;;AACA;;AARA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS6E,QAAT,CAAkB4K,OAAlB,EAA2B;AACvB,QAAMwH,kBAAkB,GAAG,mEAA3B;AACAA,EAAAA,kBAAkB,CAACpS,QAAnB,CAA4B4K,OAA5B;AACH;;;;;;;;;ACxBD;;AACA;;AACA;;AATA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS4M,gBAAT,CAA0B5M,OAA1B,EAAmC7P,OAAnC,EAA4C;AACxC,0BAAS6P,OAAT;AACA,0BAAS7P,OAAT;AACH;;;;;;;;;ACpBD;;AACA;;AARA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM0c,sBAAN,CAA6B;AACzB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI5f,EAAAA,WAAW,CAAC;AAAE6f,IAAAA,WAAF;AAAetF,IAAAA;AAAf,GAAD,EAAsC;AAC7C;AACR;AACA;AACA;AACA;AACQ,SAAKuF,eAAL,GAAuB,MAAM,KAAKrF,mBAAL,CAAyBsD,aAAzB,CAAuC,KAAKgC,YAA5C,CAA7B;;AACA,SAAKA,YAAL,GAAoBF,WAApB;AACA,SAAKpF,mBAAL,GAA2BF,kBAAkB,IACzC,mEADJ;AAEH;;AArBwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","file":"service_worker.js","sourceRoot":"..","sourcesContent":["\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:core:6.0.2'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../../_version.js';\nexport const messages = {\n    'invalid-value': ({ paramName, validValueDescription, value }) => {\n        if (!paramName || !validValueDescription) {\n            throw new Error(`Unexpected input to 'invalid-value' error.`);\n        }\n        return `The '${paramName}' parameter was given a value with an ` +\n            `unexpected value. ${validValueDescription} Received a value of ` +\n            `${JSON.stringify(value)}.`;\n    },\n    'not-an-array': ({ moduleName, className, funcName, paramName }) => {\n        if (!moduleName || !className || !funcName || !paramName) {\n            throw new Error(`Unexpected input to 'not-an-array' error.`);\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className}.${funcName}()' must be an array.`;\n    },\n    'incorrect-type': ({ expectedType, paramName, moduleName, className, funcName }) => {\n        if (!expectedType || !paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-type' error.`);\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className ? (className + '.') : ''}` +\n            `${funcName}()' must be of type ${expectedType}.`;\n    },\n    'incorrect-class': ({ expectedClass, paramName, moduleName, className, funcName, isReturnValueProblem }) => {\n        if (!expectedClass || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-class' error.`);\n        }\n        if (isReturnValueProblem) {\n            return `The return value from ` +\n                `'${moduleName}.${className ? (className + '.') : ''}${funcName}()' ` +\n                `must be an instance of class ${expectedClass.name}.`;\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className ? (className + '.') : ''}${funcName}()' ` +\n            `must be an instance of class ${expectedClass.name}.`;\n    },\n    'missing-a-method': ({ expectedMethod, paramName, moduleName, className, funcName }) => {\n        if (!expectedMethod || !paramName || !moduleName || !className\n            || !funcName) {\n            throw new Error(`Unexpected input to 'missing-a-method' error.`);\n        }\n        return `${moduleName}.${className}.${funcName}() expected the ` +\n            `'${paramName}' parameter to expose a '${expectedMethod}' method.`;\n    },\n    'add-to-cache-list-unexpected-type': ({ entry }) => {\n        return `An unexpected entry was passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' The entry ` +\n            `'${JSON.stringify(entry)}' isn't supported. You must supply an array of ` +\n            `strings with one or more characters, objects with a url property or ` +\n            `Request objects.`;\n    },\n    'add-to-cache-list-conflicting-entries': ({ firstEntry, secondEntry }) => {\n        if (!firstEntry || !secondEntry) {\n            throw new Error(`Unexpected input to ` +\n                `'add-to-cache-list-duplicate-entries' error.`);\n        }\n        return `Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${firstEntry._entryId} but different revision details. Workbox is ` +\n            `unable to cache and version the asset correctly. Please remove one ` +\n            `of the entries.`;\n    },\n    'plugin-error-request-will-fetch': ({ thrownError }) => {\n        if (!thrownError) {\n            throw new Error(`Unexpected input to ` +\n                `'plugin-error-request-will-fetch', error.`);\n        }\n        return `An error was thrown by a plugins 'requestWillFetch()' method. ` +\n            `The thrown error message was: '${thrownError.message}'.`;\n    },\n    'invalid-cache-name': ({ cacheNameId, value }) => {\n        if (!cacheNameId) {\n            throw new Error(`Expected a 'cacheNameId' for error 'invalid-cache-name'`);\n        }\n        return `You must provide a name containing at least one character for ` +\n            `setCacheDetails({${cacheNameId}: '...'}). Received a value of ` +\n            `'${JSON.stringify(value)}'`;\n    },\n    'unregister-route-but-not-found-with-method': ({ method }) => {\n        if (!method) {\n            throw new Error(`Unexpected input to ` +\n                `'unregister-route-but-not-found-with-method' error.`);\n        }\n        return `The route you're trying to unregister was not  previously ` +\n            `registered for the method type '${method}'.`;\n    },\n    'unregister-route-route-not-registered': () => {\n        return `The route you're trying to unregister was not previously ` +\n            `registered.`;\n    },\n    'queue-replay-failed': ({ name }) => {\n        return `Replaying the background sync queue '${name}' failed.`;\n    },\n    'duplicate-queue-name': ({ name }) => {\n        return `The Queue name '${name}' is already being used. ` +\n            `All instances of backgroundSync.Queue must be given unique names.`;\n    },\n    'expired-test-without-max-age': ({ methodName, paramName }) => {\n        return `The '${methodName}()' method can only be used when the ` +\n            `'${paramName}' is used in the constructor.`;\n    },\n    'unsupported-route-type': ({ moduleName, className, funcName, paramName }) => {\n        return `The supplied '${paramName}' parameter was an unsupported type. ` +\n            `Please check the docs for ${moduleName}.${className}.${funcName} for ` +\n            `valid input types.`;\n    },\n    'not-array-of-class': ({ value, expectedClass, moduleName, className, funcName, paramName }) => {\n        return `The supplied '${paramName}' parameter must be an array of ` +\n            `'${expectedClass}' objects. Received '${JSON.stringify(value)},'. ` +\n            `Please check the call to ${moduleName}.${className}.${funcName}() ` +\n            `to fix the issue.`;\n    },\n    'max-entries-or-age-required': ({ moduleName, className, funcName }) => {\n        return `You must define either config.maxEntries or config.maxAgeSeconds` +\n            `in ${moduleName}.${className}.${funcName}`;\n    },\n    'statuses-or-headers-required': ({ moduleName, className, funcName }) => {\n        return `You must define either config.statuses or config.headers` +\n            `in ${moduleName}.${className}.${funcName}`;\n    },\n    'invalid-string': ({ moduleName, funcName, paramName }) => {\n        if (!paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'invalid-string' error.`);\n        }\n        return `When using strings, the '${paramName}' parameter must start with ` +\n            `'http' (for cross-origin matches) or '/' (for same-origin matches). ` +\n            `Please see the docs for ${moduleName}.${funcName}() for ` +\n            `more info.`;\n    },\n    'channel-name-required': () => {\n        return `You must provide a channelName to construct a ` +\n            `BroadcastCacheUpdate instance.`;\n    },\n    'invalid-responses-are-same-args': () => {\n        return `The arguments passed into responsesAreSame() appear to be ` +\n            `invalid. Please ensure valid Responses are used.`;\n    },\n    'expire-custom-caches-only': () => {\n        return `You must provide a 'cacheName' property when using the ` +\n            `expiration plugin with a runtime caching strategy.`;\n    },\n    'unit-must-be-bytes': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'unit-must-be-bytes' error.`);\n        }\n        return `The 'unit' portion of the Range header must be set to 'bytes'. ` +\n            `The Range header provided was \"${normalizedRangeHeader}\"`;\n    },\n    'single-range-only': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'single-range-only' error.`);\n        }\n        return `Multiple ranges are not supported. Please use a  single start ` +\n            `value, and optional end value. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`;\n    },\n    'invalid-range-values': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'invalid-range-values' error.`);\n        }\n        return `The Range header is missing both start and end values. At least ` +\n            `one of those values is needed. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`;\n    },\n    'no-range-header': () => {\n        return `No Range header was found in the Request provided.`;\n    },\n    'range-not-satisfiable': ({ size, start, end }) => {\n        return `The start (${start}) and end (${end}) values in the Range are ` +\n            `not satisfiable by the cached response, which is ${size} bytes.`;\n    },\n    'attempt-to-cache-non-get-request': ({ url, method }) => {\n        return `Unable to cache '${url}' because it is a '${method}' request and ` +\n            `only 'GET' requests can be cached.`;\n    },\n    'cache-put-with-no-response': ({ url }) => {\n        return `There was an attempt to cache '${url}' but the response was not ` +\n            `defined.`;\n    },\n    'no-response': ({ url, error }) => {\n        let message = `The strategy could not generate a response for '${url}'.`;\n        if (error) {\n            message += ` The underlying error is ${error}.`;\n        }\n        return message;\n    },\n    'bad-precaching-response': ({ url, status }) => {\n        return `The precaching request for '${url}' failed` +\n            (status ? ` with an HTTP status of ${status}.` : `.`);\n    },\n    'non-precached-url': ({ url }) => {\n        return `createHandlerBoundToURL('${url}') was called, but that URL is ` +\n            `not precached. Please pass in a URL that is precached instead.`;\n    },\n    'add-to-cache-list-conflicting-integrities': ({ url }) => {\n        return `Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${url} with different integrity values. Please remove one of them.`;\n    },\n    'missing-precache-entry': ({ cacheName, url }) => {\n        return `Unable to find a precached response in ${cacheName} for ${url}.`;\n    },\n    'cross-origin-copy-response': ({ origin }) => {\n        return `workbox-core.copyResponse() can only be used with same-origin ` +\n            `responses. It was passed a response with origin ${origin}.`;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messages } from './messages.js';\nimport '../../_version.js';\nconst fallback = (code, ...args) => {\n    let msg = code;\n    if (args.length > 0) {\n        msg += ` :: ${JSON.stringify(args)}`;\n    }\n    return msg;\n};\nconst generatorFunction = (code, details = {}) => {\n    const message = messages[code];\n    if (!message) {\n        throw new Error(`Unable to find message for code '${code}'.`);\n    }\n    return message(details);\n};\nexport const messageGenerator = (process.env.NODE_ENV === 'production') ?\n    fallback : generatorFunction;\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messageGenerator } from '../models/messages/messageGenerator.js';\nimport '../_version.js';\n/**\n * Workbox errors should be thrown with this class.\n * This allows use to ensure the type easily in tests,\n * helps developers identify errors from workbox\n * easily and allows use to optimise error\n * messages correctly.\n *\n * @private\n */\nclass WorkboxError extends Error {\n    /**\n     *\n     * @param {string} errorCode The error code that\n     * identifies this particular error.\n     * @param {Object=} details Any relevant arguments\n     * that will help developers identify issues should\n     * be added as a key on the context object.\n     */\n    constructor(errorCode, details) {\n        const message = messageGenerator(errorCode, details);\n        super(message);\n        this.name = errorCode;\n        this.details = details;\n    }\n}\nexport { WorkboxError };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from '../_private/WorkboxError.js';\nimport '../_version.js';\n/*\n * This method throws if the supplied value is not an array.\n * The destructed values are required to produce a meaningful error for users.\n * The destructed and restructured object is so it's clear what is\n * needed.\n */\nconst isArray = (value, details) => {\n    if (!Array.isArray(value)) {\n        throw new WorkboxError('not-an-array', details);\n    }\n};\nconst hasMethod = (object, expectedMethod, details) => {\n    const type = typeof object[expectedMethod];\n    if (type !== 'function') {\n        details['expectedMethod'] = expectedMethod;\n        throw new WorkboxError('missing-a-method', details);\n    }\n};\nconst isType = (object, expectedType, details) => {\n    if (typeof object !== expectedType) {\n        details['expectedType'] = expectedType;\n        throw new WorkboxError('incorrect-type', details);\n    }\n};\nconst isInstance = (object, expectedClass, details) => {\n    if (!(object instanceof expectedClass)) {\n        details['expectedClass'] = expectedClass;\n        throw new WorkboxError('incorrect-class', details);\n    }\n};\nconst isOneOf = (value, validValues, details) => {\n    if (!validValues.includes(value)) {\n        details['validValueDescription'] =\n            `Valid values are ${JSON.stringify(validValues)}.`;\n        throw new WorkboxError('invalid-value', details);\n    }\n};\nconst isArrayOfClass = (value, expectedClass, details) => {\n    const error = new WorkboxError('not-array-of-class', details);\n    if (!Array.isArray(value)) {\n        throw error;\n    }\n    for (const item of value) {\n        if (!(item instanceof expectedClass)) {\n            throw error;\n        }\n    }\n};\nconst finalAssertExports = process.env.NODE_ENV === 'production' ? null : {\n    hasMethod,\n    isArray,\n    isInstance,\n    isOneOf,\n    isType,\n    isArrayOfClass,\n};\nexport { finalAssertExports as assert };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst logger = (process.env.NODE_ENV === 'production' ? null : (() => {\n    // Don't overwrite this value if it's already set.\n    // See https://github.com/GoogleChrome/workbox/pull/2284#issuecomment-560470923\n    if (!('__WB_DISABLE_DEV_LOGS' in self)) {\n        self.__WB_DISABLE_DEV_LOGS = false;\n    }\n    let inGroup = false;\n    const methodToColorMap = {\n        debug: `#7f8c8d`,\n        log: `#2ecc71`,\n        warn: `#f39c12`,\n        error: `#c0392b`,\n        groupCollapsed: `#3498db`,\n        groupEnd: null,\n    };\n    const print = function (method, args) {\n        if (self.__WB_DISABLE_DEV_LOGS) {\n            return;\n        }\n        if (method === 'groupCollapsed') {\n            // Safari doesn't print all console.groupCollapsed() arguments:\n            // https://bugs.webkit.org/show_bug.cgi?id=182754\n            if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n                console[method](...args);\n                return;\n            }\n        }\n        const styles = [\n            `background: ${methodToColorMap[method]}`,\n            `border-radius: 0.5em`,\n            `color: white`,\n            `font-weight: bold`,\n            `padding: 2px 0.5em`,\n        ];\n        // When in a group, the workbox prefix is not displayed.\n        const logPrefix = inGroup ? [] : ['%cworkbox', styles.join(';')];\n        console[method](...logPrefix, ...args);\n        if (method === 'groupCollapsed') {\n            inGroup = true;\n        }\n        if (method === 'groupEnd') {\n            inGroup = false;\n        }\n    };\n    const api = {};\n    const loggerMethods = Object.keys(methodToColorMap);\n    for (const key of loggerMethods) {\n        const method = key;\n        api[method] = (...args) => {\n            print(method, args);\n        };\n    }\n    return api;\n})());\nexport { logger };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:routing:6.0.2'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The default HTTP method, 'GET', used when there's no specific method\n * configured for a route.\n *\n * @type {string}\n *\n * @private\n */\nexport const defaultMethod = 'GET';\n/**\n * The list of valid HTTP methods associated with requests that could be routed.\n *\n * @type {Array<string>}\n *\n * @private\n */\nexport const validMethods = [\n    'DELETE',\n    'GET',\n    'HEAD',\n    'PATCH',\n    'POST',\n    'PUT',\n];\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport '../_version.js';\n/**\n * @param {function()|Object} handler Either a function, or an object with a\n * 'handle' method.\n * @return {Object} An object with a handle method.\n *\n * @private\n */\nexport const normalizeHandler = (handler) => {\n    if (handler && typeof handler === 'object') {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.hasMethod(handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return handler;\n    }\n    else {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(handler, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return { handle: handler };\n    }\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { defaultMethod, validMethods } from './utils/constants.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport './_version.js';\n/**\n * A `Route` consists of a pair of callback functions, \"match\" and \"handler\".\n * The \"match\" callback determine if a route should be used to \"handle\" a\n * request by returning a non-falsy value if it can. The \"handler\" callback\n * is called when there is a match and should return a Promise that resolves\n * to a `Response`.\n *\n * @memberof module:workbox-routing\n */\nclass Route {\n    /**\n     * Constructor for Route class.\n     *\n     * @param {module:workbox-routing~matchCallback} match\n     * A callback function that determines whether the route matches a given\n     * `fetch` event by returning a non-falsy value.\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(match, handler, method = defaultMethod) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(match, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'match',\n            });\n            if (method) {\n                assert.isOneOf(method, validMethods, { paramName: 'method' });\n            }\n        }\n        // These values are referenced directly by Router so cannot be\n        // altered by minificaton.\n        this.handler = normalizeHandler(handler);\n        this.match = match;\n        this.method = method;\n    }\n}\nexport { Route };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { Route } from './Route.js';\nimport './_version.js';\n/**\n * NavigationRoute makes it easy to create a\n * [Route]{@link module:workbox-routing.Route} that matches for browser\n * [navigation requests]{@link https://developers.google.com/web/fundamentals/primers/service-workers/high-performance-loading#first_what_are_navigation_requests}.\n *\n * It will only match incoming Requests whose\n * [`mode`]{@link https://fetch.spec.whatwg.org/#concept-request-mode}\n * is set to `navigate`.\n *\n * You can optionally only apply this route to a subset of navigation requests\n * by using one or both of the `denylist` and `allowlist` parameters.\n *\n * @memberof module:workbox-routing\n * @extends module:workbox-routing.Route\n */\nclass NavigationRoute extends Route {\n    /**\n     * If both `denylist` and `allowlist` are provided, the `denylist` will\n     * take precedence and the request will not match this route.\n     *\n     * The regular expressions in `allowlist` and `denylist`\n     * are matched against the concatenated\n     * [`pathname`]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/pathname}\n     * and [`search`]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/search}\n     * portions of the requested URL.\n     *\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {Object} options\n     * @param {Array<RegExp>} [options.denylist] If any of these patterns match,\n     * the route will not handle the request (even if a allowlist RegExp matches).\n     * @param {Array<RegExp>} [options.allowlist=[/./]] If any of these patterns\n     * match the URL's pathname and search parameter, the route will handle the\n     * request (assuming the denylist doesn't match).\n     */\n    constructor(handler, { allowlist = [/./], denylist = [] } = {}) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isArrayOfClass(allowlist, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'NavigationRoute',\n                funcName: 'constructor',\n                paramName: 'options.allowlist',\n            });\n            assert.isArrayOfClass(denylist, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'NavigationRoute',\n                funcName: 'constructor',\n                paramName: 'options.denylist',\n            });\n        }\n        super((options) => this._match(options), handler);\n        this._allowlist = allowlist;\n        this._denylist = denylist;\n    }\n    /**\n     * Routes match handler.\n     *\n     * @param {Object} options\n     * @param {URL} options.url\n     * @param {Request} options.request\n     * @return {boolean}\n     *\n     * @private\n     */\n    _match({ url, request }) {\n        if (request && request.mode !== 'navigate') {\n            return false;\n        }\n        const pathnameAndSearch = url.pathname + url.search;\n        for (const regExp of this._denylist) {\n            if (regExp.test(pathnameAndSearch)) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.log(`The navigation route ${pathnameAndSearch} is not ` +\n                        `being used, since the URL matches this denylist pattern: ` +\n                        `${regExp}`);\n                }\n                return false;\n            }\n        }\n        if (this._allowlist.some((regExp) => regExp.test(pathnameAndSearch))) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`The navigation route ${pathnameAndSearch} ` +\n                    `is being used.`);\n            }\n            return true;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(`The navigation route ${pathnameAndSearch} is not ` +\n                `being used, since the URL being navigated to doesn't ` +\n                `match the allowlist.`);\n        }\n        return false;\n    }\n}\nexport { NavigationRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { Route } from './Route.js';\nimport './_version.js';\n/**\n * RegExpRoute makes it easy to create a regular expression based\n * [Route]{@link module:workbox-routing.Route}.\n *\n * For same-origin requests the RegExp only needs to match part of the URL. For\n * requests against third-party servers, you must define a RegExp that matches\n * the start of the URL.\n *\n * [See the module docs for info.]{@link https://developers.google.com/web/tools/workbox/modules/workbox-routing}\n *\n * @memberof module:workbox-routing\n * @extends module:workbox-routing.Route\n */\nclass RegExpRoute extends Route {\n    /**\n     * If the regular expression contains\n     * [capture groups]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#grouping-back-references},\n     * the captured values will be passed to the\n     * [handler's]{@link module:workbox-routing~handlerCallback} `params`\n     * argument.\n     *\n     * @param {RegExp} regExp The regular expression to match against URLs.\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(regExp, handler, method) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(regExp, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'RegExpRoute',\n                funcName: 'constructor',\n                paramName: 'pattern',\n            });\n        }\n        const match = ({ url }) => {\n            const result = regExp.exec(url.href);\n            // Return immediately if there's no match.\n            if (!result) {\n                return;\n            }\n            // Require that the match start at the first character in the URL string\n            // if it's a cross-origin request.\n            // See https://github.com/GoogleChrome/workbox/issues/281 for the context\n            // behind this behavior.\n            if ((url.origin !== location.origin) && (result.index !== 0)) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`The regular expression '${regExp}' only partially matched ` +\n                        `against the cross-origin URL '${url}'. RegExpRoute's will only ` +\n                        `handle cross-origin requests if they match the entire URL.`);\n                }\n                return;\n            }\n            // If the route matches, but there aren't any capture groups defined, then\n            // this will return [], which is truthy and therefore sufficient to\n            // indicate a match.\n            // If there are capture groups, then it will return their values.\n            return result.slice(1);\n        };\n        super(match, handler, method);\n    }\n}\nexport { RegExpRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst getFriendlyURL = (url) => {\n    const urlObj = new URL(String(url), location.href);\n    // See https://github.com/GoogleChrome/workbox/issues/2323\n    // We want to include everything, except for the origin if it's same-origin.\n    return urlObj.href.replace(new RegExp(`^${location.origin}`), '');\n};\nexport { getFriendlyURL };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { defaultMethod } from './utils/constants.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport './_version.js';\n/**\n * The Router can be used to process a FetchEvent through one or more\n * [Routes]{@link module:workbox-routing.Route} responding  with a Request if\n * a matching route exists.\n *\n * If no route matches a given a request, the Router will use a \"default\"\n * handler if one is defined.\n *\n * Should the matching Route throw an error, the Router will use a \"catch\"\n * handler if one is defined to gracefully deal with issues and respond with a\n * Request.\n *\n * If a request matches multiple routes, the **earliest** registered route will\n * be used to respond to the request.\n *\n * @memberof module:workbox-routing\n */\nclass Router {\n    /**\n     * Initializes a new Router.\n     */\n    constructor() {\n        this._routes = new Map();\n        this._defaultHandlerMap = new Map();\n    }\n    /**\n     * @return {Map<string, Array<module:workbox-routing.Route>>} routes A `Map` of HTTP\n     * method name ('GET', etc.) to an array of all the corresponding `Route`\n     * instances that are registered.\n     */\n    get routes() {\n        return this._routes;\n    }\n    /**\n     * Adds a fetch event listener to respond to events when a route matches\n     * the event's request.\n     */\n    addFetchListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('fetch', ((event) => {\n            const { request } = event;\n            const responsePromise = this.handleRequest({ request, event });\n            if (responsePromise) {\n                event.respondWith(responsePromise);\n            }\n        }));\n    }\n    /**\n     * Adds a message event listener for URLs to cache from the window.\n     * This is useful to cache resources loaded on the page prior to when the\n     * service worker started controlling it.\n     *\n     * The format of the message data sent from the window should be as follows.\n     * Where the `urlsToCache` array may consist of URL strings or an array of\n     * URL string + `requestInit` object (the same as you'd pass to `fetch()`).\n     *\n     * ```\n     * {\n     *   type: 'CACHE_URLS',\n     *   payload: {\n     *     urlsToCache: [\n     *       './script1.js',\n     *       './script2.js',\n     *       ['./script3.js', {mode: 'no-cors'}],\n     *     ],\n     *   },\n     * }\n     * ```\n     */\n    addCacheListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('message', ((event) => {\n            if (event.data && event.data.type === 'CACHE_URLS') {\n                const { payload } = event.data;\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`Caching URLs from the window`, payload.urlsToCache);\n                }\n                const requestPromises = Promise.all(payload.urlsToCache.map((entry) => {\n                    if (typeof entry === 'string') {\n                        entry = [entry];\n                    }\n                    const request = new Request(...entry);\n                    return this.handleRequest({ request, event });\n                    // TODO(philipwalton): TypeScript errors without this typecast for\n                    // some reason (probably a bug). The real type here should work but\n                    // doesn't: `Array<Promise<Response> | undefined>`.\n                })); // TypeScript\n                event.waitUntil(requestPromises);\n                // If a MessageChannel was used, reply to the message on success.\n                if (event.ports && event.ports[0]) {\n                    requestPromises.then(() => event.ports[0].postMessage(true));\n                }\n            }\n        }));\n    }\n    /**\n     * Apply the routing rules to a FetchEvent object to get a Response from an\n     * appropriate Route's handler.\n     *\n     * @param {Object} options\n     * @param {Request} options.request The request to handle.\n     * @param {ExtendableEvent} options.event The event that triggered the\n     *     request.\n     * @return {Promise<Response>|undefined} A promise is returned if a\n     *     registered route can handle the request. If there is no matching\n     *     route and there's no `defaultHandler`, `undefined` is returned.\n     */\n    handleRequest({ request, event }) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'handleRequest',\n                paramName: 'options.request',\n            });\n        }\n        const url = new URL(request.url, location.href);\n        if (!url.protocol.startsWith('http')) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Workbox Router only supports URLs that start with 'http'.`);\n            }\n            return;\n        }\n        const sameOrigin = url.origin === location.origin;\n        const { params, route } = this.findMatchingRoute({\n            event,\n            request,\n            sameOrigin,\n            url,\n        });\n        let handler = route && route.handler;\n        const debugMessages = [];\n        if (process.env.NODE_ENV !== 'production') {\n            if (handler) {\n                debugMessages.push([\n                    `Found a route to handle this request:`, route,\n                ]);\n                if (params) {\n                    debugMessages.push([\n                        `Passing the following params to the route's handler:`, params,\n                    ]);\n                }\n            }\n        }\n        // If we don't have a handler because there was no matching route, then\n        // fall back to defaultHandler if that's defined.\n        const method = request.method;\n        if (!handler && this._defaultHandlerMap.has(method)) {\n            if (process.env.NODE_ENV !== 'production') {\n                debugMessages.push(`Failed to find a matching route. Falling ` +\n                    `back to the default handler for ${method}.`);\n            }\n            handler = this._defaultHandlerMap.get(method);\n        }\n        if (!handler) {\n            if (process.env.NODE_ENV !== 'production') {\n                // No handler so Workbox will do nothing. If logs is set of debug\n                // i.e. verbose, we should print out this information.\n                logger.debug(`No route found for: ${getFriendlyURL(url)}`);\n            }\n            return;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            // We have a handler, meaning Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Router is responding to: ${getFriendlyURL(url)}`);\n            debugMessages.forEach((msg) => {\n                if (Array.isArray(msg)) {\n                    logger.log(...msg);\n                }\n                else {\n                    logger.log(msg);\n                }\n            });\n            logger.groupEnd();\n        }\n        // Wrap in try and catch in case the handle method throws a synchronous\n        // error. It should still callback to the catch handler.\n        let responsePromise;\n        try {\n            responsePromise = handler.handle({ url, request, event, params });\n        }\n        catch (err) {\n            responsePromise = Promise.reject(err);\n        }\n        if (responsePromise instanceof Promise && this._catchHandler) {\n            responsePromise = responsePromise.catch((err) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    // Still include URL here as it will be async from the console group\n                    // and may not make sense without the URL\n                    logger.groupCollapsed(`Error thrown when responding to: ` +\n                        ` ${getFriendlyURL(url)}. Falling back to Catch Handler.`);\n                    logger.error(`Error thrown by:`, route);\n                    logger.error(err);\n                    logger.groupEnd();\n                }\n                return this._catchHandler.handle({ url, request, event });\n            });\n        }\n        return responsePromise;\n    }\n    /**\n     * Checks a request and URL (and optionally an event) against the list of\n     * registered routes, and if there's a match, returns the corresponding\n     * route along with any params generated by the match.\n     *\n     * @param {Object} options\n     * @param {URL} options.url\n     * @param {Request} options.request The request to match.\n     * @param {Event} options.event The corresponding event.\n     * @return {Object} An object with `route` and `params` properties.\n     *     They are populated if a matching route was found or `undefined`\n     *     otherwise.\n     */\n    findMatchingRoute({ url, sameOrigin, request, event }) {\n        const routes = this._routes.get(request.method) || [];\n        for (const route of routes) {\n            let params;\n            const matchResult = route.match({ url, sameOrigin, request, event });\n            if (matchResult) {\n                if (process.env.NODE_ENV !== 'production') {\n                    // Warn developers that using an async matchCallback is almost always\n                    // not the right thing to do. \n                    if (matchResult instanceof Promise) {\n                        logger.warn(`While routing ${getFriendlyURL(url)}, an async ` +\n                            `matchCallback function was used. Please convert the ` +\n                            `following route to use a synchronous matchCallback function:`, route);\n                    }\n                }\n                // See https://github.com/GoogleChrome/workbox/issues/2079\n                params = matchResult;\n                if (Array.isArray(matchResult) && matchResult.length === 0) {\n                    // Instead of passing an empty array in as params, use undefined.\n                    params = undefined;\n                }\n                else if ((matchResult.constructor === Object &&\n                    Object.keys(matchResult).length === 0)) {\n                    // Instead of passing an empty object in as params, use undefined.\n                    params = undefined;\n                }\n                else if (typeof matchResult === 'boolean') {\n                    // For the boolean value true (rather than just something truth-y),\n                    // don't set params.\n                    // See https://github.com/GoogleChrome/workbox/pull/2134#issuecomment-513924353\n                    params = undefined;\n                }\n                // Return early if have a match.\n                return { route, params };\n            }\n        }\n        // If no match was found above, return and empty object.\n        return {};\n    }\n    /**\n     * Define a default `handler` that's called when no routes explicitly\n     * match the incoming request.\n     *\n     * Each HTTP method ('GET', 'POST', etc.) gets its own default handler.\n     *\n     * Without a default handler, unmatched requests will go against the\n     * network as if there were no service worker present.\n     *\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to associate with this\n     * default handler. Each method has its own default.\n     */\n    setDefaultHandler(handler, method = defaultMethod) {\n        this._defaultHandlerMap.set(method, normalizeHandler(handler));\n    }\n    /**\n     * If a Route throws an error while handling a request, this `handler`\n     * will be called and given a chance to provide a response.\n     *\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     */\n    setCatchHandler(handler) {\n        this._catchHandler = normalizeHandler(handler);\n    }\n    /**\n     * Registers a route with the router.\n     *\n     * @param {module:workbox-routing.Route} route The route to register.\n     */\n    registerRoute(route) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(route, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route, 'match', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.isType(route.handler, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route.handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.handler',\n            });\n            assert.isType(route.method, 'string', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.method',\n            });\n        }\n        if (!this._routes.has(route.method)) {\n            this._routes.set(route.method, []);\n        }\n        // Give precedence to all of the earlier routes by adding this additional\n        // route to the end of the array.\n        this._routes.get(route.method).push(route);\n    }\n    /**\n     * Unregisters a route with the router.\n     *\n     * @param {module:workbox-routing.Route} route The route to unregister.\n     */\n    unregisterRoute(route) {\n        if (!this._routes.has(route.method)) {\n            throw new WorkboxError('unregister-route-but-not-found-with-method', {\n                method: route.method,\n            });\n        }\n        const routeIndex = this._routes.get(route.method).indexOf(route);\n        if (routeIndex > -1) {\n            this._routes.get(route.method).splice(routeIndex, 1);\n        }\n        else {\n            throw new WorkboxError('unregister-route-route-not-registered');\n        }\n    }\n}\nexport { Router };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { Router } from '../Router.js';\nimport '../_version.js';\nlet defaultRouter;\n/**\n * Creates a new, singleton Router instance if one does not exist. If one\n * does already exist, that instance is returned.\n *\n * @private\n * @return {Router}\n */\nexport const getOrCreateDefaultRouter = () => {\n    if (!defaultRouter) {\n        defaultRouter = new Router();\n        // The helpers that use the default Router assume these listeners exist.\n        defaultRouter.addFetchListener();\n        defaultRouter.addCacheListener();\n    }\n    return defaultRouter;\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Route } from './Route.js';\nimport { RegExpRoute } from './RegExpRoute.js';\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * Easily register a RegExp, string, or function with a caching\n * strategy to a singleton Router instance.\n *\n * This method will generate a Route for you if needed and\n * call [registerRoute()]{@link module:workbox-routing.Router#registerRoute}.\n *\n * @param {RegExp|string|module:workbox-routing.Route~matchCallback|module:workbox-routing.Route} capture\n * If the capture param is a `Route`, all other arguments will be ignored.\n * @param {module:workbox-routing~handlerCallback} [handler] A callback\n * function that returns a Promise resulting in a Response. This parameter\n * is required if `capture` is not a `Route` object.\n * @param {string} [method='GET'] The HTTP method to match the Route\n * against.\n * @return {module:workbox-routing.Route} The generated `Route`(Useful for\n * unregistering).\n *\n * @memberof module:workbox-routing\n */\nfunction registerRoute(capture, handler, method) {\n    let route;\n    if (typeof capture === 'string') {\n        const captureUrl = new URL(capture, location.href);\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(capture.startsWith('/') || capture.startsWith('http'))) {\n                throw new WorkboxError('invalid-string', {\n                    moduleName: 'workbox-routing',\n                    funcName: 'registerRoute',\n                    paramName: 'capture',\n                });\n            }\n            // We want to check if Express-style wildcards are in the pathname only.\n            // TODO: Remove this log message in v4.\n            const valueToCheck = capture.startsWith('http') ?\n                captureUrl.pathname : capture;\n            // See https://github.com/pillarjs/path-to-regexp#parameters\n            const wildcards = '[*:?+]';\n            if ((new RegExp(`${wildcards}`)).exec(valueToCheck)) {\n                logger.debug(`The '$capture' parameter contains an Express-style wildcard ` +\n                    `character (${wildcards}). Strings are now always interpreted as ` +\n                    `exact matches; use a RegExp for partial or wildcard matches.`);\n            }\n        }\n        const matchCallback = ({ url }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                if ((url.pathname === captureUrl.pathname) &&\n                    (url.origin !== captureUrl.origin)) {\n                    logger.debug(`${capture} only partially matches the cross-origin URL ` +\n                        `${url}. This route will only handle cross-origin requests ` +\n                        `if they match the entire URL.`);\n                }\n            }\n            return url.href === captureUrl.href;\n        };\n        // If `capture` is a string then `handler` and `method` must be present.\n        route = new Route(matchCallback, handler, method);\n    }\n    else if (capture instanceof RegExp) {\n        // If `capture` is a `RegExp` then `handler` and `method` must be present.\n        route = new RegExpRoute(capture, handler, method);\n    }\n    else if (typeof capture === 'function') {\n        // If `capture` is a function then `handler` and `method` must be present.\n        route = new Route(capture, handler, method);\n    }\n    else if (capture instanceof Route) {\n        route = capture;\n    }\n    else {\n        throw new WorkboxError('unsupported-route-type', {\n            moduleName: 'workbox-routing',\n            funcName: 'registerRoute',\n            paramName: 'capture',\n        });\n    }\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.registerRoute(route);\n    return route;\n}\nexport { registerRoute };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * If a Route throws an error while handling a request, this `handler`\n * will be called and given a chance to provide a response.\n *\n * @param {module:workbox-routing~handlerCallback} handler A callback\n * function that returns a Promise resulting in a Response.\n *\n * @memberof module:workbox-routing\n */\nfunction setCatchHandler(handler) {\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.setCatchHandler(handler);\n}\nexport { setCatchHandler };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * Define a default `handler` that's called when no routes explicitly\n * match the incoming request.\n *\n * Without a default handler, unmatched requests will go against the\n * network as if there were no service worker present.\n *\n * @param {module:workbox-routing~handlerCallback} handler A callback\n * function that returns a Promise resulting in a Response.\n *\n * @memberof module:workbox-routing\n */\nfunction setDefaultHandler(handler) {\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.setDefaultHandler(handler);\n}\nexport { setDefaultHandler };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { NavigationRoute } from './NavigationRoute.js';\nimport { RegExpRoute } from './RegExpRoute.js';\nimport { registerRoute } from './registerRoute.js';\nimport { Route } from './Route.js';\nimport { Router } from './Router.js';\nimport { setCatchHandler } from './setCatchHandler.js';\nimport { setDefaultHandler } from './setDefaultHandler.js';\nimport './_version.js';\n/**\n * @module workbox-routing\n */\nexport { NavigationRoute, RegExpRoute, registerRoute, Route, Router, setCatchHandler, setDefaultHandler, };\n","export * from './index.js';","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst _cacheNameDetails = {\n    googleAnalytics: 'googleAnalytics',\n    precache: 'precache-v2',\n    prefix: 'workbox',\n    runtime: 'runtime',\n    suffix: typeof registration !== 'undefined' ? registration.scope : '',\n};\nconst _createCacheName = (cacheName) => {\n    return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix]\n        .filter((value) => value && value.length > 0)\n        .join('-');\n};\nconst eachCacheNameDetail = (fn) => {\n    for (const key of Object.keys(_cacheNameDetails)) {\n        fn(key);\n    }\n};\nexport const cacheNames = {\n    updateDetails: (details) => {\n        eachCacheNameDetail((key) => {\n            if (typeof details[key] === 'string') {\n                _cacheNameDetails[key] = details[key];\n            }\n        });\n    },\n    getGoogleAnalyticsName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\n    },\n    getPrecacheName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.precache);\n    },\n    getPrefix: () => {\n        return _cacheNameDetails.prefix;\n    },\n    getRuntimeName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.runtime);\n    },\n    getSuffix: () => {\n        return _cacheNameDetails.suffix;\n    },\n};\n","/*\n  Copyright 2020 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nfunction stripParams(fullURL, ignoreParams) {\n    const strippedURL = new URL(fullURL);\n    for (const param of ignoreParams) {\n        strippedURL.searchParams.delete(param);\n    }\n    return strippedURL.href;\n}\n/**\n * Matches an item in the cache, ignoring specific URL params. This is similar\n * to the `ignoreSearch` option, but it allows you to ignore just specific\n * params (while continuing to match on the others).\n *\n * @private\n * @param {Cache} cache\n * @param {Request} request\n * @param {Object} matchOptions\n * @param {Array<string>} ignoreParams\n * @return {Promise<Response|undefined>}\n */\nasync function cacheMatchIgnoreParams(cache, request, ignoreParams, matchOptions) {\n    const strippedRequestURL = stripParams(request.url, ignoreParams);\n    // If the request doesn't include any ignored params, match as normal.\n    if (request.url === strippedRequestURL) {\n        return cache.match(request, matchOptions);\n    }\n    // Otherwise, match by comparing keys\n    const keysOptions = { ...matchOptions, ignoreSearch: true };\n    const cacheKeys = await cache.keys(request, keysOptions);\n    for (const cacheKey of cacheKeys) {\n        const strippedCacheKeyURL = stripParams(cacheKey.url, ignoreParams);\n        if (strippedRequestURL === strippedCacheKeyURL) {\n            return cache.match(cacheKey, matchOptions);\n        }\n    }\n    return;\n}\nexport { cacheMatchIgnoreParams };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The Deferred class composes Promises in a way that allows for them to be\n * resolved or rejected from outside the constructor. In most cases promises\n * should be used directly, but Deferreds can be necessary when the logic to\n * resolve a promise must be separate.\n *\n * @private\n */\nclass Deferred {\n    /**\n     * Creates a promise and exposes its resolve and reject functions as methods.\n     */\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\nexport { Deferred };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n// Callbacks to be executed whenever there's a quota error.\nconst quotaErrorCallbacks = new Set();\nexport { quotaErrorCallbacks };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from '../_private/logger.js';\nimport { quotaErrorCallbacks } from '../models/quotaErrorCallbacks.js';\nimport '../_version.js';\n/**\n * Runs all of the callback functions, one at a time sequentially, in the order\n * in which they were registered.\n *\n * @memberof module:workbox-core\n * @private\n */\nasync function executeQuotaErrorCallbacks() {\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log(`About to run ${quotaErrorCallbacks.size} ` +\n            `callbacks to clean up caches.`);\n    }\n    for (const callback of quotaErrorCallbacks) {\n        await callback();\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(callback, 'is complete.');\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Finished running callbacks.');\n    }\n}\nexport { executeQuotaErrorCallbacks };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Returns a promise that resolves and the passed number of milliseconds.\n * This utility is an async/await-friendly version of `setTimeout`.\n *\n * @param {number} ms\n * @return {Promise}\n * @private\n */\nexport function timeout(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:strategies:6.0.2'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheMatchIgnoreParams } from 'workbox-core/_private/cacheMatchIgnoreParams.js';\nimport { Deferred } from 'workbox-core/_private/Deferred.js';\nimport { executeQuotaErrorCallbacks } from 'workbox-core/_private/executeQuotaErrorCallbacks.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { timeout } from 'workbox-core/_private/timeout.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport './_version.js';\nfunction toRequest(input) {\n    return (typeof input === 'string') ? new Request(input) : input;\n}\n/**\n * A class created every time a Strategy instance instance calls\n * [handle()]{@link module:workbox-strategies.Strategy~handle} or\n * [handleAll()]{@link module:workbox-strategies.Strategy~handleAll} that wraps all fetch and\n * cache actions around plugin callbacks and keeps track of when the strategy\n * is \"done\" (i.e. all added `event.waitUntil()` promises have resolved).\n *\n * @memberof module:workbox-strategies\n */\nclass StrategyHandler {\n    /**\n     * Creates a new instance associated with the passed strategy and event\n     * that's handling the request.\n     *\n     * The constructor also initializes the state that will be passed to each of\n     * the plugins handling this request.\n     *\n     * @param {module:workbox-strategies.Strategy} strategy\n     * @param {Object} options\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     *     [match callback]{@link module:workbox-routing~matchCallback},\n     *     (if applicable).\n     */\n    constructor(strategy, options) {\n        this._cacheKeys = {};\n        /**\n         * The request the strategy is performing (passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * @name request\n         * @instance\n         * @type {Request}\n         * @memberof module:workbox-strategies.StrategyHandler\n         */\n        /**\n         * The event associated with this request.\n         * @name event\n         * @instance\n         * @type {ExtendableEvent}\n         * @memberof module:workbox-strategies.StrategyHandler\n         */\n        /**\n         * A `URL` instance of `request.url` (if passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * Note: the `url` param will be present if the strategy was invoked\n         * from a workbox `Route` object.\n         * @name url\n         * @instance\n         * @type {URL|undefined}\n         * @memberof module:workbox-strategies.StrategyHandler\n         */\n        /**\n         * A `param` value (if passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * Note: the `param` param will be present if the strategy was invoked\n         * from a workbox `Route` object and the\n         * [match callback]{@link module:workbox-routing~matchCallback} returned\n         * a truthy value (it will be that value).\n         * @name params\n         * @instance\n         * @type {*|undefined}\n         * @memberof module:workbox-strategies.StrategyHandler\n         */\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(options.event, ExtendableEvent, {\n                moduleName: 'workbox-strategies',\n                className: 'StrategyHandler',\n                funcName: 'constructor',\n                paramName: 'options.event',\n            });\n        }\n        Object.assign(this, options);\n        this.event = options.event;\n        this._strategy = strategy;\n        this._handlerDeferred = new Deferred();\n        this._extendLifetimePromises = [];\n        // Copy the plugins list (since it's mutable on the strategy),\n        // so any mutations don't affect this handler instance.\n        this._plugins = [...strategy.plugins];\n        this._pluginStateMap = new Map();\n        for (const plugin of this._plugins) {\n            this._pluginStateMap.set(plugin, {});\n        }\n        this.event.waitUntil(this._handlerDeferred.promise);\n    }\n    /**\n     * Fetches a given request (and invokes any applicable plugin callback\n     * methods) using the `fetchOptions` and `plugins` defined on the strategy\n     * object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - `requestWillFetch()`\n     * - `fetchDidSucceed()`\n     * - `fetchDidFail()`\n     *\n     * @param {Request|string} input The URL or request to fetch.\n     * @return {Promise<Response>}\n     */\n    fetch(input) {\n        return this.waitUntil((async () => {\n            const { event } = this;\n            let request = toRequest(input);\n            if (request.mode === 'navigate' &&\n                event instanceof FetchEvent &&\n                event.preloadResponse) {\n                const possiblePreloadResponse = await event.preloadResponse;\n                if (possiblePreloadResponse) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        logger.log(`Using a preloaded navigation response for ` +\n                            `'${getFriendlyURL(request.url)}'`);\n                    }\n                    return possiblePreloadResponse;\n                }\n            }\n            // If there is a fetchDidFail plugin, we need to save a clone of the\n            // original request before it's either modified by a requestWillFetch\n            // plugin or before the original request's body is consumed via fetch().\n            const originalRequest = this.hasCallback('fetchDidFail') ?\n                request.clone() : null;\n            try {\n                for (const cb of this.iterateCallbacks('requestWillFetch')) {\n                    request = await cb({ request: request.clone(), event });\n                }\n            }\n            catch (err) {\n                throw new WorkboxError('plugin-error-request-will-fetch', {\n                    thrownError: err,\n                });\n            }\n            // The request can be altered by plugins with `requestWillFetch` making\n            // the original request (most likely from a `fetch` event) different\n            // from the Request we make. Pass both to `fetchDidFail` to aid debugging.\n            const pluginFilteredRequest = request.clone();\n            try {\n                let fetchResponse;\n                // See https://github.com/GoogleChrome/workbox/issues/1796\n                fetchResponse = await fetch(request, request.mode === 'navigate' ?\n                    undefined : this._strategy.fetchOptions);\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`Network request for ` +\n                        `'${getFriendlyURL(request.url)}' returned a response with ` +\n                        `status '${fetchResponse.status}'.`);\n                }\n                for (const callback of this.iterateCallbacks('fetchDidSucceed')) {\n                    fetchResponse = await callback({\n                        event,\n                        request: pluginFilteredRequest,\n                        response: fetchResponse,\n                    });\n                }\n                return fetchResponse;\n            }\n            catch (error) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.error(`Network request for ` +\n                        `'${getFriendlyURL(request.url)}' threw an error.`, error);\n                }\n                // `originalRequest` will only exist if a `fetchDidFail` callback\n                // is being used (see above).\n                if (originalRequest) {\n                    await this.runCallbacks('fetchDidFail', {\n                        error,\n                        event,\n                        originalRequest: originalRequest.clone(),\n                        request: pluginFilteredRequest.clone(),\n                    });\n                }\n                throw error;\n            }\n        })());\n    }\n    /**\n     * Calls `this.fetch()` and (in the background) runs `this.cachePut()` on\n     * the response generated by `this.fetch()`.\n     *\n     * The call to `this.cachePut()` automatically invokes `this.waitUntil()`,\n     * so you do not have to manually call `waitUntil()` on the event.\n     *\n     * @param {Request|string} input The request or URL to fetch and cache.\n     * @return {Promise<Response>}\n     */\n    async fetchAndCachePut(input) {\n        const response = await this.fetch(input);\n        const responseClone = response.clone();\n        this.waitUntil(this.cachePut(input, responseClone));\n        return response;\n    }\n    /**\n     * Matches a request from the cache (and invokes any applicable plugin\n     * callback methods) using the `cacheName`, `matchOptions`, and `plugins`\n     * defined on the strategy object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - cacheKeyWillByUsed()\n     * - cachedResponseWillByUsed()\n     *\n     * @param {Request|string} key The Request or URL to use as the cache key.\n     * @return {Promise<Response|undefined>} A matching response, if found.\n     */\n    cacheMatch(key) {\n        return this.waitUntil((async () => {\n            const request = toRequest(key);\n            let cachedResponse;\n            const { cacheName, matchOptions } = this._strategy;\n            const effectiveRequest = await this.getCacheKey(request, 'read');\n            const multiMatchOptions = { ...matchOptions, ...{ cacheName } };\n            cachedResponse = await caches.match(effectiveRequest, multiMatchOptions);\n            if (process.env.NODE_ENV !== 'production') {\n                if (cachedResponse) {\n                    logger.debug(`Found a cached response in '${cacheName}'.`);\n                }\n                else {\n                    logger.debug(`No cached response found in '${cacheName}'.`);\n                }\n            }\n            for (const callback of this.iterateCallbacks('cachedResponseWillBeUsed')) {\n                cachedResponse = (await callback({\n                    cacheName,\n                    matchOptions,\n                    cachedResponse,\n                    request: effectiveRequest,\n                    event: this.event,\n                })) || undefined;\n            }\n            return cachedResponse;\n        })());\n    }\n    /**\n     * Puts a request/response pair in the cache (and invokes any applicable\n     * plugin callback methods) using the `cacheName` and `plugins` defined on\n     * the strategy object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - cacheKeyWillByUsed()\n     * - cacheWillUpdate()\n     * - cacheDidUpdate()\n     *\n     * @param {Request|string} key The request or URL to use as the cache key.\n     * @param {Promise<void>} response The response to cache.\n     */\n    async cachePut(key, response) {\n        const request = toRequest(key);\n        // Run in the next task to avoid blocking other cache reads.\n        // https://github.com/w3c/ServiceWorker/issues/1397\n        await timeout(0);\n        const effectiveRequest = await this.getCacheKey(request, 'write');\n        if (process.env.NODE_ENV !== 'production') {\n            if (effectiveRequest.method && effectiveRequest.method !== 'GET') {\n                throw new WorkboxError('attempt-to-cache-non-get-request', {\n                    url: getFriendlyURL(effectiveRequest.url),\n                    method: effectiveRequest.method,\n                });\n            }\n        }\n        if (!response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.error(`Cannot cache non-existent response for ` +\n                    `'${getFriendlyURL(effectiveRequest.url)}'.`);\n            }\n            throw new WorkboxError('cache-put-with-no-response', {\n                url: getFriendlyURL(effectiveRequest.url),\n            });\n        }\n        const responseToCache = await this._ensureResponseSafeToCache(response);\n        if (!responseToCache) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Response '${getFriendlyURL(effectiveRequest.url)}' ` +\n                    `will not be cached.`, responseToCache);\n            }\n            return;\n        }\n        const { cacheName, matchOptions } = this._strategy;\n        const cache = await self.caches.open(cacheName);\n        const hasCacheUpdateCallback = this.hasCallback('cacheDidUpdate');\n        const oldResponse = hasCacheUpdateCallback ? await cacheMatchIgnoreParams(\n        // TODO(philipwalton): the `__WB_REVISION__` param is a precaching\n        // feature. Consider into ways to only add this behavior if using\n        // precaching.\n        cache, effectiveRequest.clone(), ['__WB_REVISION__'], matchOptions) :\n            null;\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Updating the '${cacheName}' cache with a new Response ` +\n                `for ${getFriendlyURL(effectiveRequest.url)}.`);\n        }\n        try {\n            await cache.put(effectiveRequest, hasCacheUpdateCallback ?\n                responseToCache.clone() : responseToCache);\n        }\n        catch (error) {\n            // See https://developer.mozilla.org/en-US/docs/Web/API/DOMException#exception-QuotaExceededError\n            if (error.name === 'QuotaExceededError') {\n                await executeQuotaErrorCallbacks();\n            }\n            throw error;\n        }\n        for (const callback of this.iterateCallbacks('cacheDidUpdate')) {\n            await callback({\n                cacheName,\n                oldResponse,\n                newResponse: responseToCache.clone(),\n                request: effectiveRequest,\n                event: this.event,\n            });\n        }\n    }\n    /**\n     * Checks the list of plugins for the `cacheKeyWillBeUsed` callback, and\n     * executes any of those callbacks found in sequence. The final `Request`\n     * object returned by the last plugin is treated as the cache key for cache\n     * reads and/or writes. If no `cacheKeyWillBeUsed` plugin callbacks have\n     * been registered, the passed request is returned unmodified\n     *\n     * @param {Request} request\n     * @param {string} mode\n     * @return {Promise<Request>}\n     */\n    async getCacheKey(request, mode) {\n        if (!this._cacheKeys[mode]) {\n            let effectiveRequest = request;\n            for (const callback of this.iterateCallbacks('cacheKeyWillBeUsed')) {\n                effectiveRequest = toRequest(await callback({\n                    mode,\n                    request: effectiveRequest,\n                    event: this.event,\n                    params: this.params,\n                }));\n            }\n            this._cacheKeys[mode] = effectiveRequest;\n        }\n        return this._cacheKeys[mode];\n    }\n    /**\n     * Returns true if the strategy has at least one plugin with the given\n     * callback.\n     *\n     * @param {string} name The name of the callback to check for.\n     * @return {boolean}\n     */\n    hasCallback(name) {\n        for (const plugin of this._strategy.plugins) {\n            if (name in plugin) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Runs all plugin callbacks matching the given name, in order, passing the\n     * given param object (merged ith the current plugin state) as the only\n     * argument.\n     *\n     * Note: since this method runs all plugins, it's not suitable for cases\n     * where the return value of a callback needs to be applied prior to calling\n     * the next callback. See\n     * [`iterateCallbacks()`]{@link module:workbox-strategies.StrategyHandler#iterateCallbacks}\n     * below for how to handle that case.\n     *\n     * @param {string} name The name of the callback to run within each plugin.\n     * @param {Object} param The object to pass as the first (and only) param\n     *     when executing each callback. This object will be merged with the\n     *     current plugin state prior to callback execution.\n     */\n    async runCallbacks(name, param) {\n        for (const callback of this.iterateCallbacks(name)) {\n            // TODO(philipwalton): not sure why `any` is needed. It seems like\n            // this should work with `as WorkboxPluginCallbackParam[C]`.\n            await callback(param);\n        }\n    }\n    /**\n     * Accepts a callback and returns an iterable of matching plugin callbacks,\n     * where each callback is wrapped with the current handler state (i.e. when\n     * you call each callback, whatever object parameter you pass it will\n     * be merged with the plugin's current state).\n     *\n     * @param {string} name The name fo the callback to run\n     * @return {Array<Function>}\n     */\n    *iterateCallbacks(name) {\n        for (const plugin of this._strategy.plugins) {\n            if (typeof plugin[name] === 'function') {\n                const state = this._pluginStateMap.get(plugin);\n                const statefulCallback = (param) => {\n                    const statefulParam = { ...param, state };\n                    // TODO(philipwalton): not sure why `any` is needed. It seems like\n                    // this should work with `as WorkboxPluginCallbackParam[C]`.\n                    return plugin[name](statefulParam);\n                };\n                yield statefulCallback;\n            }\n        }\n    }\n    /**\n     * Adds a promise to the\n     * [extend lifetime promises]{@link https://w3c.github.io/ServiceWorker/#extendableevent-extend-lifetime-promises}\n     * of the event event associated with the request being handled (usually a\n     * `FetchEvent`).\n     *\n     * Note: you can await\n     * [`doneWaiting()`]{@link module:workbox-strategies.StrategyHandler~doneWaiting}\n     * to know when all added promises have settled.\n     *\n     * @param {Promise} promise A promise to add to the extend lifetime promises\n     *     of the event that triggered the request.\n     */\n    waitUntil(promise) {\n        this._extendLifetimePromises.push(promise);\n        return promise;\n    }\n    /**\n     * Returns a promise that resolves once all promises passed to\n     * [`waitUntil()`]{@link module:workbox-strategies.StrategyHandler~waitUntil}\n     * have settled.\n     *\n     * Note: any work done after `doneWaiting()` settles should be manually\n     * passed to an event's `waitUntil()` method (not this handler's\n     * `waitUntil()` method), otherwise the service worker thread my be killed\n     * prior to your work completing.\n     */\n    async doneWaiting() {\n        let promise;\n        while (promise = this._extendLifetimePromises.shift()) {\n            await promise;\n        }\n    }\n    /**\n     * Stops running the strategy and immediately resolves any pending\n     * `waitUntil()` promises.\n     */\n    destroy() {\n        this._handlerDeferred.resolve();\n    }\n    /**\n     * This method will call cacheWillUpdate on the available plugins (or use\n     * status === 200) to determine if the Response is safe and valid to cache.\n     *\n     * @param {Request} options.request\n     * @param {Response} options.response\n     * @return {Promise<Response|undefined>}\n     *\n     * @private\n     */\n    async _ensureResponseSafeToCache(response) {\n        let responseToCache = response;\n        let pluginsUsed = false;\n        for (const callback of this.iterateCallbacks('cacheWillUpdate')) {\n            responseToCache = (await callback({\n                request: this.request,\n                response: responseToCache,\n                event: this.event,\n            })) || undefined;\n            pluginsUsed = true;\n            if (!responseToCache) {\n                break;\n            }\n        }\n        if (!pluginsUsed) {\n            if (responseToCache && responseToCache.status !== 200) {\n                responseToCache = undefined;\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                if (responseToCache) {\n                    if (responseToCache.status !== 200) {\n                        if (responseToCache.status === 0) {\n                            logger.warn(`The response for '${this.request.url}' ` +\n                                `is an opaque response. The caching strategy that you're ` +\n                                `using will not cache opaque responses by default.`);\n                        }\n                        else {\n                            logger.debug(`The response for '${this.request.url}' ` +\n                                `returned a status code of '${response.status}' and won't ` +\n                                `be cached as a result.`);\n                        }\n                    }\n                }\n            }\n        }\n        return responseToCache;\n    }\n}\nexport { StrategyHandler };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { StrategyHandler } from './StrategyHandler.js';\nimport './_version.js';\n/**\n * An abstract base class that all other strategy classes must extend from:\n *\n * @memberof module:workbox-strategies\n */\nclass Strategy {\n    /**\n     * Creates a new instance of the strategy and sets all documented option\n     * properties as public instance properties.\n     *\n     * Note: if a custom strategy class extends the base Strategy class and does\n     * not need more than these properties, it does not need to define its own\n     * constructor.\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to the cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters}\n     * of all fetch() requests made by this strategy.\n     * @param {Object} [options.matchOptions] The\n     * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n     * for any `cache.match()` or `cache.put()` calls made by this strategy.\n     */\n    constructor(options = {}) {\n        /**\n         * Cache name to store and retrieve\n         * requests. Defaults to the cache names provided by\n         * [workbox-core]{@link module:workbox-core.cacheNames}.\n         *\n         * @type {string}\n         */\n        this.cacheName = cacheNames.getRuntimeName(options.cacheName);\n        /**\n         * The list\n         * [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n         * used by this strategy.\n         *\n         * @type {Array<Object>}\n         */\n        this.plugins = options.plugins || [];\n        /**\n         * Values passed along to the\n         * [`init`]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters}\n         * of all fetch() requests made by this strategy.\n         *\n         * @type {Object}\n         */\n        this.fetchOptions = options.fetchOptions;\n        /**\n         * The\n         * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n         * for any `cache.match()` or `cache.put()` calls made by this strategy.\n         *\n         * @type {Object}\n         */\n        this.matchOptions = options.matchOptions;\n    }\n    /**\n     * Perform a request strategy and returns a `Promise` that will resolve with\n     * a `Response`, invoking all relevant plugin callbacks.\n     *\n     * When a strategy instance is registered with a Workbox\n     * [route]{@link module:workbox-routing.Route}, this method is automatically\n     * called when the route matches.\n     *\n     * Alternatively, this method can be used in a standalone `FetchEvent`\n     * listener by passing it to `event.respondWith()`.\n     *\n     * @param {FetchEvent|Object} options A `FetchEvent` or an object with the\n     *     properties listed below.\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     */\n    handle(options) {\n        const [responseDone] = this.handleAll(options);\n        return responseDone;\n    }\n    /**\n     * Similar to [`handle()`]{@link module:workbox-strategies.Strategy~handle}, but\n     * instead of just returning a `Promise` that resolves to a `Response` it\n     * it will return an tuple of [response, done] promises, where the former\n     * (`response`) is equivalent to what `handle()` returns, and the latter is a\n     * Promise that will resolve once any promises that were added to\n     * `event.waitUntil()` as part of performing the strategy have completed.\n     *\n     * You can await the `done` promise to ensure any extra work performed by\n     * the strategy (usually caching responses) completes successfully.\n     *\n     * @param {FetchEvent|Object} options A `FetchEvent` or an object with the\n     *     properties listed below.\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     * @return {Array<Promise>} A tuple of [response, done]\n     *     promises that can be used to determine when the response resolves as\n     *     well as when the handler has completed all its work.\n     */\n    handleAll(options) {\n        // Allow for flexible options to be passed.\n        if (options instanceof FetchEvent) {\n            options = {\n                event: options,\n                request: options.request,\n            };\n        }\n        const event = options.event;\n        const request = typeof options.request === 'string' ?\n            new Request(options.request) :\n            options.request;\n        const params = 'params' in options ? options.params : undefined;\n        const handler = new StrategyHandler(this, { event, request, params });\n        const responseDone = this._getResponse(handler, request, event);\n        const handlerDone = this._awaitComplete(responseDone, handler, request, event);\n        // Return an array of promises, suitable for use with Promise.all().\n        return [responseDone, handlerDone];\n    }\n    async _getResponse(handler, request, event) {\n        await handler.runCallbacks('handlerWillStart', { event, request });\n        let response = undefined;\n        try {\n            response = await this._handle(request, handler);\n            // The \"official\" Strategy subclasses all throw this error automatically,\n            // but in case a third-party Strategy doesn't, ensure that we have a\n            // consistent failure when there's no response or an error response.\n            if (!response || response.type === 'error') {\n                throw new WorkboxError('no-response', { url: request.url });\n            }\n        }\n        catch (error) {\n            for (const callback of handler.iterateCallbacks('handlerDidError')) {\n                response = await callback({ error, event, request });\n                if (response) {\n                    break;\n                }\n            }\n            if (!response) {\n                throw error;\n            }\n            else if (process.env.NODE_ENV !== 'production') {\n                logger.log(`While responding to '${getFriendlyURL(request.url)}', ` +\n                    `an ${error} error occurred. Using a fallback response provided by ` +\n                    `a handlerDidError plugin.`);\n            }\n        }\n        for (const callback of handler.iterateCallbacks('handlerWillRespond')) {\n            response = await callback({ event, request, response });\n        }\n        return response;\n    }\n    async _awaitComplete(responseDone, handler, request, event) {\n        let response;\n        let error;\n        try {\n            response = await responseDone;\n        }\n        catch (error) {\n            // Ignore errors, as response errors should be caught via the `response`\n            // promise above. The `done` promise will only throw for errors in\n            // promises passed to `handler.waitUntil()`.\n        }\n        try {\n            await handler.runCallbacks('handlerDidRespond', {\n                event,\n                request,\n                response,\n            });\n            await handler.doneWaiting();\n        }\n        catch (waitUntilError) {\n            error = waitUntilError;\n        }\n        await handler.runCallbacks('handlerDidComplete', {\n            event,\n            request,\n            response,\n            error,\n        });\n        handler.destroy();\n        if (error) {\n            throw error;\n        }\n    }\n}\nexport { Strategy };\n/**\n * Classes extending the `Strategy` based class should implement this method,\n * and leverage the [`handler`]{@link module:workbox-strategies.StrategyHandler}\n * arg to perform all fetching and cache logic, which will ensure all relevant\n * cache, cache options, fetch options and plugins are used (per the current\n * strategy instance).\n *\n * @name _handle\n * @instance\n * @abstract\n * @function\n * @param {Request} request\n * @param {module:workbox-strategies.StrategyHandler} handler\n * @return {Promise<Response>}\n *\n * @memberof module:workbox-strategies.Strategy\n */\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport '../_version.js';\nexport const messages = {\n    strategyStart: (strategyName, request) => `Using ${strategyName} to respond to '${getFriendlyURL(request.url)}'`,\n    printFinalResponse: (response) => {\n        if (response) {\n            logger.groupCollapsed(`View the final response here.`);\n            logger.log(response || '[No response returned]');\n            logger.groupEnd();\n        }\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a [cache-first]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#cache-falling-back-to-network}\n * request strategy.\n *\n * A cache first strategy is useful for assets that have been revisioned,\n * such as URLs like `/styles/example.a8f5f1.css`, since they\n * can be cached for long periods of time.\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @extends module:workbox-strategies.Strategy\n * @memberof module:workbox-strategies\n */\nclass CacheFirst extends Strategy {\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {module:workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const logs = [];\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: 'makeRequest',\n                paramName: 'request',\n            });\n        }\n        let response = await handler.cacheMatch(request);\n        let error;\n        if (!response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`No response found in the '${this.cacheName}' cache. ` +\n                    `Will respond with a network request.`);\n            }\n            try {\n                response = await handler.fetchAndCachePut(request);\n            }\n            catch (err) {\n                error = err;\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                if (response) {\n                    logs.push(`Got response from network.`);\n                }\n                else {\n                    logs.push(`Unable to get a response from the network.`);\n                }\n            }\n        }\n        else {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`Found a cached response in the '${this.cacheName}' cache.`);\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n}\nexport { CacheFirst };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [cache-only]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#cache-only}\n * request strategy.\n *\n * This class is useful if you want to take advantage of any\n * [Workbox plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}.\n *\n * If there is no cache match, this will throw a `WorkboxError` exception.\n *\n * @extends module:workbox-strategies.Strategy\n * @memberof module:workbox-strategies\n */\nclass CacheOnly extends Strategy {\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {module:workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: 'makeRequest',\n                paramName: 'request',\n            });\n        }\n        const response = await handler.cacheMatch(request);\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            if (response) {\n                logger.log(`Found a cached response in the '${this.cacheName}' ` +\n                    `cache.`);\n                messages.printFinalResponse(response);\n            }\n            else {\n                logger.log(`No response found in the '${this.cacheName}' cache.`);\n            }\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url });\n        }\n        return response;\n    }\n}\nexport { CacheOnly };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nexport const cacheOkAndOpaquePlugin = {\n    /**\n     * Returns a valid response (to allow caching) if the status is 200 (OK) or\n     * 0 (opaque).\n     *\n     * @param {Object} options\n     * @param {Response} options.response\n     * @return {Response|null}\n     *\n     * @private\n     */\n    cacheWillUpdate: async ({ response }) => {\n        if (response.status === 200 || response.status === 0) {\n            return response;\n        }\n        return null;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { cacheOkAndOpaquePlugin } from './plugins/cacheOkAndOpaquePlugin.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [network first]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#network-falling-back-to-cache}\n * request strategy.\n *\n * By default, this strategy will cache responses with a 200 status code as\n * well as [opaque responses]{@link https://developers.google.com/web/tools/workbox/guides/handle-third-party-requests}.\n * Opaque responses are are cross-origin requests where the response doesn't\n * support [CORS]{@link https://enable-cors.org/}.\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @extends module:workbox-strategies.Strategy\n * @memberof module:workbox-strategies\n */\nclass NetworkFirst extends Strategy {\n    /**\n     * @param {Object} [options]\n     * @param {string} [options.cacheName Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of all fetch() requests made by this strategy.\n     * @param {Object} [options.matchOptions [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     * @param {number} [options.networkTimeoutSeconds] If set, any network requests\n     * that fail to respond within the timeout will fallback to the cache.\n     *\n     * This option can be used to combat\n     * \"[lie-fi]{@link https://developers.google.com/web/fundamentals/performance/poor-connectivity/#lie-fi}\"\n     * scenarios.\n     */\n    constructor(options = {}) {\n        super(options);\n        // If this instance contains no plugins with a 'cacheWillUpdate' callback,\n        // prepend the `cacheOkAndOpaquePlugin` plugin to the plugins list.\n        if (!this.plugins.some((p) => 'cacheWillUpdate' in p)) {\n            this.plugins.unshift(cacheOkAndOpaquePlugin);\n        }\n        this._networkTimeoutSeconds = options.networkTimeoutSeconds || 0;\n        if (process.env.NODE_ENV !== 'production') {\n            if (this._networkTimeoutSeconds) {\n                assert.isType(this._networkTimeoutSeconds, 'number', {\n                    moduleName: 'workbox-strategies',\n                    className: this.constructor.name,\n                    funcName: 'constructor',\n                    paramName: 'networkTimeoutSeconds',\n                });\n            }\n        }\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {module:workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const logs = [];\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: 'handle',\n                paramName: 'makeRequest',\n            });\n        }\n        const promises = [];\n        let timeoutId;\n        if (this._networkTimeoutSeconds) {\n            const { id, promise } = this._getTimeoutPromise({ request, logs, handler });\n            timeoutId = id;\n            promises.push(promise);\n        }\n        const networkPromise = this._getNetworkPromise({ timeoutId, request, logs, handler });\n        promises.push(networkPromise);\n        for (const promise of promises) {\n            handler.waitUntil(promise);\n        }\n        // Promise.race() will resolve as soon as the first promise resolves.\n        let response = await Promise.race(promises);\n        // If Promise.race() resolved with null, it might be due to a network\n        // timeout + a cache miss. If that were to happen, we'd rather wait until\n        // the networkPromise resolves instead of returning null.\n        // Note that it's fine to await an already-resolved promise, so we don't\n        // have to check to see if it's still \"in flight\".\n        if (!response) {\n            response = await networkPromise;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url });\n        }\n        return response;\n    }\n    /**\n     * @param {Object} options\n     * @param {Request} options.request\n     * @param {Array} options.logs A reference to the logs array\n     * @param {Event} options.event\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    _getTimeoutPromise({ request, logs, handler }) {\n        let timeoutId;\n        const timeoutPromise = new Promise((resolve) => {\n            const onNetworkTimeout = async () => {\n                if (process.env.NODE_ENV !== 'production') {\n                    logs.push(`Timing out the network response at ` +\n                        `${this._networkTimeoutSeconds} seconds.`);\n                }\n                resolve(await handler.cacheMatch(request));\n            };\n            timeoutId = setTimeout(onNetworkTimeout, this._networkTimeoutSeconds * 1000);\n        });\n        return {\n            promise: timeoutPromise,\n            id: timeoutId,\n        };\n    }\n    /**\n     * @param {Object} options\n     * @param {number|undefined} options.timeoutId\n     * @param {Request} options.request\n     * @param {Array} options.logs A reference to the logs Array.\n     * @param {Event} options.event\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    async _getNetworkPromise({ timeoutId, request, logs, handler }) {\n        let error;\n        let response;\n        try {\n            response = await handler.fetchAndCachePut(request);\n        }\n        catch (fetchError) {\n            error = fetchError;\n        }\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (response) {\n                logs.push(`Got response from network.`);\n            }\n            else {\n                logs.push(`Unable to get a response from the network. Will respond ` +\n                    `with a cached response.`);\n            }\n        }\n        if (error || !response) {\n            response = await handler.cacheMatch(request);\n            if (process.env.NODE_ENV !== 'production') {\n                if (response) {\n                    logs.push(`Found a cached response in the '${this.cacheName}'` +\n                        ` cache.`);\n                }\n                else {\n                    logs.push(`No response found in the '${this.cacheName}' cache.`);\n                }\n            }\n        }\n        return response;\n    }\n}\nexport { NetworkFirst };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { timeout } from 'workbox-core/_private/timeout.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [network-only]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#network-only}\n * request strategy.\n *\n * This class is useful if you want to take advantage of any\n * [Workbox plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}.\n *\n * If the network request fails, this will throw a `WorkboxError` exception.\n *\n * @extends module:workbox-strategies.Strategy\n * @memberof module:workbox-strategies\n */\nclass NetworkOnly extends Strategy {\n    /**\n     * @param {Object} [options]\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of all fetch() requests made by this strategy.\n     * @param {number} [options.networkTimeoutSeconds] If set, any network requests\n     * that fail to respond within the timeout will result in a network error.\n     */\n    constructor(options = {}) {\n        super(options);\n        this._networkTimeoutSeconds = options.networkTimeoutSeconds || 0;\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {module:workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: '_handle',\n                paramName: 'request',\n            });\n        }\n        let error = undefined;\n        let response;\n        try {\n            const promises = [handler.fetch(request)];\n            if (this._networkTimeoutSeconds) {\n                const timeoutPromise = timeout(this._networkTimeoutSeconds * 1000);\n                promises.push(timeoutPromise);\n            }\n            response = await Promise.race(promises);\n            if (!response) {\n                throw new Error(`Timed out the network response after ` +\n                    `${this._networkTimeoutSeconds} seconds.`);\n            }\n        }\n        catch (err) {\n            error = err;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            if (response) {\n                logger.log(`Got response from network.`);\n            }\n            else {\n                logger.log(`Unable to get a response from the network.`);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n}\nexport { NetworkOnly };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { cacheOkAndOpaquePlugin } from './plugins/cacheOkAndOpaquePlugin.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [stale-while-revalidate]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#stale-while-revalidate}\n * request strategy.\n *\n * Resources are requested from both the cache and the network in parallel.\n * The strategy will respond with the cached version if available, otherwise\n * wait for the network response. The cache is updated with the network response\n * with each successful request.\n *\n * By default, this strategy will cache responses with a 200 status code as\n * well as [opaque responses]{@link https://developers.google.com/web/tools/workbox/guides/handle-third-party-requests}.\n * Opaque responses are cross-origin requests where the response doesn't\n * support [CORS]{@link https://enable-cors.org/}.\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @extends module:workbox-strategies.Strategy\n * @memberof module:workbox-strategies\n */\nclass StaleWhileRevalidate extends Strategy {\n    /**\n     * @param {Object} options\n     * @param {string} options.cacheName Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} options.plugins [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} options.fetchOptions Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of all fetch() requests made by this strategy.\n     * @param {Object} options.matchOptions [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     */\n    constructor(options) {\n        super(options);\n        // If this instance contains no plugins with a 'cacheWillUpdate' callback,\n        // prepend the `cacheOkAndOpaquePlugin` plugin to the plugins list.\n        if (!this.plugins.some((p) => 'cacheWillUpdate' in p)) {\n            this.plugins.unshift(cacheOkAndOpaquePlugin);\n        }\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {module:workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const logs = [];\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: 'handle',\n                paramName: 'request',\n            });\n        }\n        const fetchAndCachePromise = handler\n            .fetchAndCachePut(request)\n            .catch(() => {\n            // Swallow this error because a 'no-response' error will be thrown in\n            // main handler return flow. This will be in the `waitUntil()` flow.\n        });\n        let response = await handler.cacheMatch(request);\n        let error;\n        if (response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`Found a cached response in the '${this.cacheName}'` +\n                    ` cache. Will update with the network response in the background.`);\n            }\n        }\n        else {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`No response found in the '${this.cacheName}' cache. ` +\n                    `Will wait for the network response.`);\n            }\n            try {\n                // NOTE(philipwalton): Really annoying that we have to type cast here.\n                // https://github.com/microsoft/TypeScript/issues/20006\n                response = await fetchAndCachePromise;\n            }\n            catch (err) {\n                error = err;\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n}\nexport { StaleWhileRevalidate };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { CacheFirst } from './CacheFirst.js';\nimport { CacheOnly } from './CacheOnly.js';\nimport { NetworkFirst } from './NetworkFirst.js';\nimport { NetworkOnly } from './NetworkOnly.js';\nimport { StaleWhileRevalidate } from './StaleWhileRevalidate.js';\nimport { Strategy } from './Strategy.js';\nimport { StrategyHandler } from './StrategyHandler.js';\nimport './_version.js';\n/**\n * There are common caching strategies that most service workers will need\n * and use. This module provides simple implementations of these strategies.\n *\n * @module workbox-strategies\n */\nexport { CacheFirst, CacheOnly, NetworkFirst, NetworkOnly, StaleWhileRevalidate, Strategy, StrategyHandler, };\n","export * from './index.js';","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:cacheable-response:6.0.2'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport './_version.js';\n/**\n * This class allows you to set up rules determining what\n * status codes and/or headers need to be present in order for a\n * [`Response`](https://developer.mozilla.org/en-US/docs/Web/API/Response)\n * to be considered cacheable.\n *\n * @memberof module:workbox-cacheable-response\n */\nclass CacheableResponse {\n    /**\n     * To construct a new CacheableResponse instance you must provide at least\n     * one of the `config` properties.\n     *\n     * If both `statuses` and `headers` are specified, then both conditions must\n     * be met for the `Response` to be considered cacheable.\n     *\n     * @param {Object} config\n     * @param {Array<number>} [config.statuses] One or more status codes that a\n     * `Response` can have and be considered cacheable.\n     * @param {Object<string,string>} [config.headers] A mapping of header names\n     * and expected values that a `Response` can have and be considered cacheable.\n     * If multiple headers are provided, only one needs to be present.\n     */\n    constructor(config = {}) {\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(config.statuses || config.headers)) {\n                throw new WorkboxError('statuses-or-headers-required', {\n                    moduleName: 'workbox-cacheable-response',\n                    className: 'CacheableResponse',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.statuses) {\n                assert.isArray(config.statuses, {\n                    moduleName: 'workbox-cacheable-response',\n                    className: 'CacheableResponse',\n                    funcName: 'constructor',\n                    paramName: 'config.statuses',\n                });\n            }\n            if (config.headers) {\n                assert.isType(config.headers, 'object', {\n                    moduleName: 'workbox-cacheable-response',\n                    className: 'CacheableResponse',\n                    funcName: 'constructor',\n                    paramName: 'config.headers',\n                });\n            }\n        }\n        this._statuses = config.statuses;\n        this._headers = config.headers;\n    }\n    /**\n     * Checks a response to see whether it's cacheable or not, based on this\n     * object's configuration.\n     *\n     * @param {Response} response The response whose cacheability is being\n     * checked.\n     * @return {boolean} `true` if the `Response` is cacheable, and `false`\n     * otherwise.\n     */\n    isResponseCacheable(response) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(response, Response, {\n                moduleName: 'workbox-cacheable-response',\n                className: 'CacheableResponse',\n                funcName: 'isResponseCacheable',\n                paramName: 'response',\n            });\n        }\n        let cacheable = true;\n        if (this._statuses) {\n            cacheable = this._statuses.includes(response.status);\n        }\n        if (this._headers && cacheable) {\n            cacheable = Object.keys(this._headers).some((headerName) => {\n                return response.headers.get(headerName) === this._headers[headerName];\n            });\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (!cacheable) {\n                logger.groupCollapsed(`The request for ` +\n                    `'${getFriendlyURL(response.url)}' returned a response that does ` +\n                    `not meet the criteria for being cached.`);\n                logger.groupCollapsed(`View cacheability criteria here.`);\n                logger.log(`Cacheable statuses: ` +\n                    JSON.stringify(this._statuses));\n                logger.log(`Cacheable headers: ` +\n                    JSON.stringify(this._headers, null, 2));\n                logger.groupEnd();\n                const logFriendlyHeaders = {};\n                response.headers.forEach((value, key) => {\n                    logFriendlyHeaders[key] = value;\n                });\n                logger.groupCollapsed(`View response status and headers here.`);\n                logger.log(`Response status: ` + response.status);\n                logger.log(`Response headers: ` +\n                    JSON.stringify(logFriendlyHeaders, null, 2));\n                logger.groupEnd();\n                logger.groupCollapsed(`View full response details here.`);\n                logger.log(response.headers);\n                logger.log(response);\n                logger.groupEnd();\n                logger.groupEnd();\n            }\n        }\n        return cacheable;\n    }\n}\nexport { CacheableResponse };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { CacheableResponse } from './CacheableResponse.js';\nimport './_version.js';\n/**\n * A class implementing the `cacheWillUpdate` lifecycle callback. This makes it\n * easier to add in cacheability checks to requests made via Workbox's built-in\n * strategies.\n *\n * @memberof module:workbox-cacheable-response\n */\nclass CacheableResponsePlugin {\n    /**\n     * To construct a new CacheableResponsePlugin instance you must provide at\n     * least one of the `config` properties.\n     *\n     * If both `statuses` and `headers` are specified, then both conditions must\n     * be met for the `Response` to be considered cacheable.\n     *\n     * @param {Object} config\n     * @param {Array<number>} [config.statuses] One or more status codes that a\n     * `Response` can have and be considered cacheable.\n     * @param {Object<string,string>} [config.headers] A mapping of header names\n     * and expected values that a `Response` can have and be considered cacheable.\n     * If multiple headers are provided, only one needs to be present.\n     */\n    constructor(config) {\n        /**\n         * @param {Object} options\n         * @param {Response} options.response\n         * @return {Response|null}\n         * @private\n         */\n        this.cacheWillUpdate = async ({ response }) => {\n            if (this._cacheableResponse.isResponseCacheable(response)) {\n                return response;\n            }\n            return null;\n        };\n        this._cacheableResponse = new CacheableResponse(config);\n    }\n}\nexport { CacheableResponsePlugin };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { CacheableResponse } from './CacheableResponse.js';\nimport { CacheableResponsePlugin } from './CacheableResponsePlugin.js';\nimport './_version.js';\n/**\n * @module workbox-cacheable-response\n */\nexport { CacheableResponse, CacheableResponsePlugin, };\n","export * from './index.js';","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A helper function that prevents a promise from being flagged as unused.\n *\n * @private\n **/\nexport function dontWaitFor(promise) {\n    // Effective no-op.\n    promise.then(() => { });\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A class that wraps common IndexedDB functionality in a promise-based API.\n * It exposes all the underlying power and functionality of IndexedDB, but\n * wraps the most commonly used features in a way that's much simpler to use.\n *\n * @private\n */\nexport class DBWrapper {\n    /**\n     * @param {string} name\n     * @param {number} version\n     * @param {Object=} [callback]\n     * @param {!Function} [callbacks.onupgradeneeded]\n     * @param {!Function} [callbacks.onversionchange] Defaults to\n     *     DBWrapper.prototype._onversionchange when not specified.\n     * @private\n     */\n    constructor(name, version, { onupgradeneeded, onversionchange, } = {}) {\n        this._db = null;\n        this._name = name;\n        this._version = version;\n        this._onupgradeneeded = onupgradeneeded;\n        this._onversionchange = onversionchange || (() => this.close());\n    }\n    /**\n     * Returns the IDBDatabase instance (not normally needed).\n     * @return {IDBDatabase|undefined}\n     *\n     * @private\n     */\n    get db() {\n        return this._db;\n    }\n    /**\n     * Opens a connected to an IDBDatabase, invokes any onupgradedneeded\n     * callback, and added an onversionchange callback to the database.\n     *\n     * @return {IDBDatabase}\n     * @private\n     */\n    async open() {\n        if (this._db)\n            return;\n        this._db = await new Promise((resolve, reject) => {\n            // This flag is flipped to true if the timeout callback runs prior\n            // to the request failing or succeeding. Note: we use a timeout instead\n            // of an onblocked handler since there are cases where onblocked will\n            // never never run. A timeout better handles all possible scenarios:\n            // https://github.com/w3c/IndexedDB/issues/223\n            let openRequestTimedOut = false;\n            setTimeout(() => {\n                openRequestTimedOut = true;\n                reject(new Error('The open request was blocked and timed out'));\n            }, this.OPEN_TIMEOUT);\n            const openRequest = indexedDB.open(this._name, this._version);\n            openRequest.onerror = () => reject(openRequest.error);\n            openRequest.onupgradeneeded = (evt) => {\n                if (openRequestTimedOut) {\n                    openRequest.transaction.abort();\n                    openRequest.result.close();\n                }\n                else if (typeof this._onupgradeneeded === 'function') {\n                    this._onupgradeneeded(evt);\n                }\n            };\n            openRequest.onsuccess = () => {\n                const db = openRequest.result;\n                if (openRequestTimedOut) {\n                    db.close();\n                }\n                else {\n                    db.onversionchange = this._onversionchange.bind(this);\n                    resolve(db);\n                }\n            };\n        });\n        return this;\n    }\n    /**\n     * Polyfills the native `getKey()` method. Note, this is overridden at\n     * runtime if the browser supports the native method.\n     *\n     * @param {string} storeName\n     * @param {*} query\n     * @return {Array}\n     * @private\n     */\n    async getKey(storeName, query) {\n        return (await this.getAllKeys(storeName, query, 1))[0];\n    }\n    /**\n     * Polyfills the native `getAll()` method. Note, this is overridden at\n     * runtime if the browser supports the native method.\n     *\n     * @param {string} storeName\n     * @param {*} query\n     * @param {number} count\n     * @return {Array}\n     * @private\n     */\n    async getAll(storeName, query, count) {\n        return await this.getAllMatching(storeName, { query, count });\n    }\n    /**\n     * Polyfills the native `getAllKeys()` method. Note, this is overridden at\n     * runtime if the browser supports the native method.\n     *\n     * @param {string} storeName\n     * @param {*} query\n     * @param {number} count\n     * @return {Array}\n     * @private\n     */\n    async getAllKeys(storeName, query, count) {\n        const entries = await this.getAllMatching(storeName, { query, count, includeKeys: true });\n        return entries.map((entry) => entry.key);\n    }\n    /**\n     * Supports flexible lookup in an object store by specifying an index,\n     * query, direction, and count. This method returns an array of objects\n     * with the signature .\n     *\n     * @param {string} storeName\n     * @param {Object} [opts]\n     * @param {string} [opts.index] The index to use (if specified).\n     * @param {*} [opts.query]\n     * @param {IDBCursorDirection} [opts.direction]\n     * @param {number} [opts.count] The max number of results to return.\n     * @param {boolean} [opts.includeKeys] When true, the structure of the\n     *     returned objects is changed from an array of values to an array of\n     *     objects in the form {key, primaryKey, value}.\n     * @return {Array}\n     * @private\n     */\n    async getAllMatching(storeName, { index, query = null, // IE/Edge errors if query === `undefined`.\n    direction = 'next', count, includeKeys = false, } = {}) {\n        return await this.transaction([storeName], 'readonly', (txn, done) => {\n            const store = txn.objectStore(storeName);\n            const target = index ? store.index(index) : store;\n            const results = [];\n            const request = target.openCursor(query, direction);\n            request.onsuccess = () => {\n                const cursor = request.result;\n                if (cursor) {\n                    results.push(includeKeys ? cursor : cursor.value);\n                    if (count && results.length >= count) {\n                        done(results);\n                    }\n                    else {\n                        cursor.continue();\n                    }\n                }\n                else {\n                    done(results);\n                }\n            };\n        });\n    }\n    /**\n     * Accepts a list of stores, a transaction type, and a callback and\n     * performs a transaction. A promise is returned that resolves to whatever\n     * value the callback chooses. The callback holds all the transaction logic\n     * and is invoked with two arguments:\n     *   1. The IDBTransaction object\n     *   2. A `done` function, that's used to resolve the promise when\n     *      when the transaction is done, if passed a value, the promise is\n     *      resolved to that value.\n     *\n     * @param {Array<string>} storeNames An array of object store names\n     *     involved in the transaction.\n     * @param {string} type Can be `readonly` or `readwrite`.\n     * @param {!Function} callback\n     * @return {*} The result of the transaction ran by the callback.\n     * @private\n     */\n    async transaction(storeNames, type, callback) {\n        await this.open();\n        return await new Promise((resolve, reject) => {\n            const txn = this._db.transaction(storeNames, type);\n            txn.onabort = () => reject(txn.error);\n            txn.oncomplete = () => resolve();\n            callback(txn, (value) => resolve(value));\n        });\n    }\n    /**\n     * Delegates async to a native IDBObjectStore method.\n     *\n     * @param {string} method The method name.\n     * @param {string} storeName The object store name.\n     * @param {string} type Can be `readonly` or `readwrite`.\n     * @param {...*} args The list of args to pass to the native method.\n     * @return {*} The result of the transaction.\n     * @private\n     */\n    async _call(method, storeName, type, ...args) {\n        const callback = (txn, done) => {\n            const objStore = txn.objectStore(storeName);\n            // TODO(philipwalton): Fix this underlying TS2684 error.\n            // @ts-ignore\n            const request = objStore[method].apply(objStore, args);\n            request.onsuccess = () => done(request.result);\n        };\n        return await this.transaction([storeName], type, callback);\n    }\n    /**\n     * Closes the connection opened by `DBWrapper.open()`. Generally this method\n     * doesn't need to be called since:\n     *   1. It's usually better to keep a connection open since opening\n     *      a new connection is somewhat slow.\n     *   2. Connections are automatically closed when the reference is\n     *      garbage collected.\n     * The primary use case for needing to close a connection is when another\n     * reference (typically in another tab) needs to upgrade it and would be\n     * blocked by the current, open connection.\n     *\n     * @private\n     */\n    close() {\n        if (this._db) {\n            this._db.close();\n            this._db = null;\n        }\n    }\n}\n// Exposed on the prototype to let users modify the default timeout on a\n// per-instance or global basis.\nDBWrapper.prototype.OPEN_TIMEOUT = 2000;\n// Wrap native IDBObjectStore methods according to their mode.\nconst methodsToWrap = {\n    readonly: ['get', 'count', 'getKey', 'getAll', 'getAllKeys'],\n    readwrite: ['add', 'put', 'clear', 'delete'],\n};\nfor (const [mode, methods] of Object.entries(methodsToWrap)) {\n    for (const method of methods) {\n        if (method in IDBObjectStore.prototype) {\n            // Don't use arrow functions here since we're outside of the class.\n            DBWrapper.prototype[method] =\n                async function (storeName, ...args) {\n                    return await this._call(method, storeName, mode, ...args);\n                };\n        }\n    }\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Deletes the database.\n * Note: this is exported separately from the DBWrapper module because most\n * usages of IndexedDB in workbox dont need deleting, and this way it can be\n * reused in tests to delete databases without creating DBWrapper instances.\n *\n * @param {string} name The database name.\n * @private\n */\nexport const deleteDatabase = async (name) => {\n    await new Promise((resolve, reject) => {\n        const request = indexedDB.deleteDatabase(name);\n        request.onerror = () => {\n            reject(request.error);\n        };\n        request.onblocked = () => {\n            reject(new Error('Delete blocked'));\n        };\n        request.onsuccess = () => {\n            resolve();\n        };\n    });\n};\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:expiration:6.0.2'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { DBWrapper } from 'workbox-core/_private/DBWrapper.js';\nimport { deleteDatabase } from 'workbox-core/_private/deleteDatabase.js';\nimport '../_version.js';\nconst DB_NAME = 'workbox-expiration';\nconst OBJECT_STORE_NAME = 'cache-entries';\nconst normalizeURL = (unNormalizedUrl) => {\n    const url = new URL(unNormalizedUrl, location.href);\n    url.hash = '';\n    return url.href;\n};\n/**\n * Returns the timestamp model.\n *\n * @private\n */\nclass CacheTimestampsModel {\n    /**\n     *\n     * @param {string} cacheName\n     *\n     * @private\n     */\n    constructor(cacheName) {\n        this._cacheName = cacheName;\n        this._db = new DBWrapper(DB_NAME, 1, {\n            onupgradeneeded: (event) => this._handleUpgrade(event),\n        });\n    }\n    /**\n     * Should perform an upgrade of indexedDB.\n     *\n     * @param {Event} event\n     *\n     * @private\n     */\n    _handleUpgrade(event) {\n        const db = event.target.result;\n        // TODO(philipwalton): EdgeHTML doesn't support arrays as a keyPath, so we\n        // have to use the `id` keyPath here and create our own values (a\n        // concatenation of `url + cacheName`) instead of simply using\n        // `keyPath: ['url', 'cacheName']`, which is supported in other browsers.\n        const objStore = db.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\n        // TODO(philipwalton): once we don't have to support EdgeHTML, we can\n        // create a single index with the keyPath `['cacheName', 'timestamp']`\n        // instead of doing both these indexes.\n        objStore.createIndex('cacheName', 'cacheName', { unique: false });\n        objStore.createIndex('timestamp', 'timestamp', { unique: false });\n        // Previous versions of `workbox-expiration` used `this._cacheName`\n        // as the IDBDatabase name.\n        deleteDatabase(this._cacheName);\n    }\n    /**\n     * @param {string} url\n     * @param {number} timestamp\n     *\n     * @private\n     */\n    async setTimestamp(url, timestamp) {\n        url = normalizeURL(url);\n        const entry = {\n            url,\n            timestamp,\n            cacheName: this._cacheName,\n            // Creating an ID from the URL and cache name won't be necessary once\n            // Edge switches to Chromium and all browsers we support work with\n            // array keyPaths.\n            id: this._getId(url),\n        };\n        await this._db.put(OBJECT_STORE_NAME, entry);\n    }\n    /**\n     * Returns the timestamp stored for a given URL.\n     *\n     * @param {string} url\n     * @return {number}\n     *\n     * @private\n     */\n    async getTimestamp(url) {\n        const entry = await this._db.get(OBJECT_STORE_NAME, this._getId(url));\n        return entry.timestamp;\n    }\n    /**\n     * Iterates through all the entries in the object store (from newest to\n     * oldest) and removes entries once either `maxCount` is reached or the\n     * entry's timestamp is less than `minTimestamp`.\n     *\n     * @param {number} minTimestamp\n     * @param {number} maxCount\n     * @return {Array<string>}\n     *\n     * @private\n     */\n    async expireEntries(minTimestamp, maxCount) {\n        const entriesToDelete = await this._db.transaction(OBJECT_STORE_NAME, 'readwrite', (txn, done) => {\n            const store = txn.objectStore(OBJECT_STORE_NAME);\n            const request = store.index('timestamp').openCursor(null, 'prev');\n            const entriesToDelete = [];\n            let entriesNotDeletedCount = 0;\n            request.onsuccess = () => {\n                const cursor = request.result;\n                if (cursor) {\n                    const result = cursor.value;\n                    // TODO(philipwalton): once we can use a multi-key index, we\n                    // won't have to check `cacheName` here.\n                    if (result.cacheName === this._cacheName) {\n                        // Delete an entry if it's older than the max age or\n                        // if we already have the max number allowed.\n                        if ((minTimestamp && result.timestamp < minTimestamp) ||\n                            (maxCount && entriesNotDeletedCount >= maxCount)) {\n                            // TODO(philipwalton): we should be able to delete the\n                            // entry right here, but doing so causes an iteration\n                            // bug in Safari stable (fixed in TP). Instead we can\n                            // store the keys of the entries to delete, and then\n                            // delete the separate transactions.\n                            // https://github.com/GoogleChrome/workbox/issues/1978\n                            // cursor.delete();\n                            // We only need to return the URL, not the whole entry.\n                            entriesToDelete.push(cursor.value);\n                        }\n                        else {\n                            entriesNotDeletedCount++;\n                        }\n                    }\n                    cursor.continue();\n                }\n                else {\n                    done(entriesToDelete);\n                }\n            };\n        });\n        // TODO(philipwalton): once the Safari bug in the following issue is fixed,\n        // we should be able to remove this loop and do the entry deletion in the\n        // cursor loop above:\n        // https://github.com/GoogleChrome/workbox/issues/1978\n        const urlsDeleted = [];\n        for (const entry of entriesToDelete) {\n            await this._db.delete(OBJECT_STORE_NAME, entry.id);\n            urlsDeleted.push(entry.url);\n        }\n        return urlsDeleted;\n    }\n    /**\n     * Takes a URL and returns an ID that will be unique in the object store.\n     *\n     * @param {string} url\n     * @return {string}\n     *\n     * @private\n     */\n    _getId(url) {\n        // Creating an ID from the URL and cache name won't be necessary once\n        // Edge switches to Chromium and all browsers we support work with\n        // array keyPaths.\n        return this._cacheName + '|' + normalizeURL(url);\n    }\n}\nexport { CacheTimestampsModel };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { dontWaitFor } from 'workbox-core/_private/dontWaitFor.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { CacheTimestampsModel } from './models/CacheTimestampsModel.js';\nimport './_version.js';\n/**\n * The `CacheExpiration` class allows you define an expiration and / or\n * limit on the number of responses stored in a\n * [`Cache`](https://developer.mozilla.org/en-US/docs/Web/API/Cache).\n *\n * @memberof module:workbox-expiration\n */\nclass CacheExpiration {\n    /**\n     * To construct a new CacheExpiration instance you must provide at least\n     * one of the `config` properties.\n     *\n     * @param {string} cacheName Name of the cache to apply restrictions to.\n     * @param {Object} config\n     * @param {number} [config.maxEntries] The maximum number of entries to cache.\n     * Entries used the least will be removed as the maximum is reached.\n     * @param {number} [config.maxAgeSeconds] The maximum age of an entry before\n     * it's treated as stale and removed.\n     * @param {Object} [config.matchOptions] The [`CacheQueryOptions`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/delete#Parameters)\n     * that will be used when calling `delete()` on the cache.\n     */\n    constructor(cacheName, config = {}) {\n        this._isRunning = false;\n        this._rerunRequested = false;\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(cacheName, 'string', {\n                moduleName: 'workbox-expiration',\n                className: 'CacheExpiration',\n                funcName: 'constructor',\n                paramName: 'cacheName',\n            });\n            if (!(config.maxEntries || config.maxAgeSeconds)) {\n                throw new WorkboxError('max-entries-or-age-required', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.maxEntries) {\n                assert.isType(config.maxEntries, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                    paramName: 'config.maxEntries',\n                });\n            }\n            if (config.maxAgeSeconds) {\n                assert.isType(config.maxAgeSeconds, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                    paramName: 'config.maxAgeSeconds',\n                });\n            }\n        }\n        this._maxEntries = config.maxEntries;\n        this._maxAgeSeconds = config.maxAgeSeconds;\n        this._matchOptions = config.matchOptions;\n        this._cacheName = cacheName;\n        this._timestampModel = new CacheTimestampsModel(cacheName);\n    }\n    /**\n     * Expires entries for the given cache and given criteria.\n     */\n    async expireEntries() {\n        if (this._isRunning) {\n            this._rerunRequested = true;\n            return;\n        }\n        this._isRunning = true;\n        const minTimestamp = this._maxAgeSeconds ?\n            Date.now() - (this._maxAgeSeconds * 1000) : 0;\n        const urlsExpired = await this._timestampModel.expireEntries(minTimestamp, this._maxEntries);\n        // Delete URLs from the cache\n        const cache = await self.caches.open(this._cacheName);\n        for (const url of urlsExpired) {\n            await cache.delete(url, this._matchOptions);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (urlsExpired.length > 0) {\n                logger.groupCollapsed(`Expired ${urlsExpired.length} ` +\n                    `${urlsExpired.length === 1 ? 'entry' : 'entries'} and removed ` +\n                    `${urlsExpired.length === 1 ? 'it' : 'them'} from the ` +\n                    `'${this._cacheName}' cache.`);\n                logger.log(`Expired the following ${urlsExpired.length === 1 ?\n                    'URL' : 'URLs'}:`);\n                urlsExpired.forEach((url) => logger.log(`    ${url}`));\n                logger.groupEnd();\n            }\n            else {\n                logger.debug(`Cache expiration ran and found no entries to remove.`);\n            }\n        }\n        this._isRunning = false;\n        if (this._rerunRequested) {\n            this._rerunRequested = false;\n            dontWaitFor(this.expireEntries());\n        }\n    }\n    /**\n     * Update the timestamp for the given URL. This ensures the when\n     * removing entries based on maximum entries, most recently used\n     * is accurate or when expiring, the timestamp is up-to-date.\n     *\n     * @param {string} url\n     */\n    async updateTimestamp(url) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(url, 'string', {\n                moduleName: 'workbox-expiration',\n                className: 'CacheExpiration',\n                funcName: 'updateTimestamp',\n                paramName: 'url',\n            });\n        }\n        await this._timestampModel.setTimestamp(url, Date.now());\n    }\n    /**\n     * Can be used to check if a URL has expired or not before it's used.\n     *\n     * This requires a look up from IndexedDB, so can be slow.\n     *\n     * Note: This method will not remove the cached entry, call\n     * `expireEntries()` to remove indexedDB and Cache entries.\n     *\n     * @param {string} url\n     * @return {boolean}\n     */\n    async isURLExpired(url) {\n        if (!this._maxAgeSeconds) {\n            if (process.env.NODE_ENV !== 'production') {\n                throw new WorkboxError(`expired-test-without-max-age`, {\n                    methodName: 'isURLExpired',\n                    paramName: 'maxAgeSeconds',\n                });\n            }\n            return false;\n        }\n        else {\n            const timestamp = await this._timestampModel.getTimestamp(url);\n            const expireOlderThan = Date.now() - (this._maxAgeSeconds * 1000);\n            return (timestamp < expireOlderThan);\n        }\n    }\n    /**\n     * Removes the IndexedDB object store used to keep track of cache expiration\n     * metadata.\n     */\n    async delete() {\n        // Make sure we don't attempt another rerun if we're called in the middle of\n        // a cache expiration.\n        this._rerunRequested = false;\n        await this._timestampModel.expireEntries(Infinity); // Expires all.\n    }\n}\nexport { CacheExpiration };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from './_private/logger.js';\nimport { assert } from './_private/assert.js';\nimport { quotaErrorCallbacks } from './models/quotaErrorCallbacks.js';\nimport './_version.js';\n/**\n * Adds a function to the set of quotaErrorCallbacks that will be executed if\n * there's a quota error.\n *\n * @param {Function} callback\n * @memberof module:workbox-core\n */\nfunction registerQuotaErrorCallback(callback) {\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isType(callback, 'function', {\n            moduleName: 'workbox-core',\n            funcName: 'register',\n            paramName: 'callback',\n        });\n    }\n    quotaErrorCallbacks.add(callback);\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Registered a callback to respond to quota errors.', callback);\n    }\n}\nexport { registerQuotaErrorCallback };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { dontWaitFor } from 'workbox-core/_private/dontWaitFor.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { registerQuotaErrorCallback } from 'workbox-core/registerQuotaErrorCallback.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { CacheExpiration } from './CacheExpiration.js';\nimport './_version.js';\n/**\n * This plugin can be used in a `workbox-strategy` to regularly enforce a\n * limit on the age and / or the number of cached requests.\n *\n * It can only be used with `workbox-strategy` instances that have a\n * [custom `cacheName` property set](/web/tools/workbox/guides/configure-workbox#custom_cache_names_in_strategies).\n * In other words, it can't be used to expire entries in strategy that uses the\n * default runtime cache name.\n *\n * Whenever a cached request is used or updated, this plugin will look\n * at the associated cache and remove any old or extra requests.\n *\n * When using `maxAgeSeconds`, requests may be used *once* after expiring\n * because the expiration clean up will not have occurred until *after* the\n * cached request has been used. If the request has a \"Date\" header, then\n * a light weight expiration check is performed and the request will not be\n * used immediately.\n *\n * When using `maxEntries`, the entry least-recently requested will be removed\n * from the cache first.\n *\n * @memberof module:workbox-expiration\n */\nclass ExpirationPlugin {\n    /**\n     * @param {Object} config\n     * @param {number} [config.maxEntries] The maximum number of entries to cache.\n     * Entries used the least will be removed as the maximum is reached.\n     * @param {number} [config.maxAgeSeconds] The maximum age of an entry before\n     * it's treated as stale and removed.\n     * @param {Object} [config.matchOptions] The [`CacheQueryOptions`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/delete#Parameters)\n     * that will be used when calling `delete()` on the cache.\n     * @param {boolean} [config.purgeOnQuotaError] Whether to opt this cache in to\n     * automatic deletion if the available storage quota has been exceeded.\n     */\n    constructor(config = {}) {\n        /**\n         * A \"lifecycle\" callback that will be triggered automatically by the\n         * `workbox-strategies` handlers when a `Response` is about to be returned\n         * from a [Cache](https://developer.mozilla.org/en-US/docs/Web/API/Cache) to\n         * the handler. It allows the `Response` to be inspected for freshness and\n         * prevents it from being used if the `Response`'s `Date` header value is\n         * older than the configured `maxAgeSeconds`.\n         *\n         * @param {Object} options\n         * @param {string} options.cacheName Name of the cache the response is in.\n         * @param {Response} options.cachedResponse The `Response` object that's been\n         *     read from a cache and whose freshness should be checked.\n         * @return {Response} Either the `cachedResponse`, if it's\n         *     fresh, or `null` if the `Response` is older than `maxAgeSeconds`.\n         *\n         * @private\n         */\n        this.cachedResponseWillBeUsed = async ({ event, request, cacheName, cachedResponse }) => {\n            if (!cachedResponse) {\n                return null;\n            }\n            const isFresh = this._isResponseDateFresh(cachedResponse);\n            // Expire entries to ensure that even if the expiration date has\n            // expired, it'll only be used once.\n            const cacheExpiration = this._getCacheExpiration(cacheName);\n            dontWaitFor(cacheExpiration.expireEntries());\n            // Update the metadata for the request URL to the current timestamp,\n            // but don't `await` it as we don't want to block the response.\n            const updateTimestampDone = cacheExpiration.updateTimestamp(request.url);\n            if (event) {\n                try {\n                    event.waitUntil(updateTimestampDone);\n                }\n                catch (error) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // The event may not be a fetch event; only log the URL if it is.\n                        if ('request' in event) {\n                            logger.warn(`Unable to ensure service worker stays alive when ` +\n                                `updating cache entry for ` +\n                                `'${getFriendlyURL(event.request.url)}'.`);\n                        }\n                    }\n                }\n            }\n            return isFresh ? cachedResponse : null;\n        };\n        /**\n         * A \"lifecycle\" callback that will be triggered automatically by the\n         * `workbox-strategies` handlers when an entry is added to a cache.\n         *\n         * @param {Object} options\n         * @param {string} options.cacheName Name of the cache that was updated.\n         * @param {string} options.request The Request for the cached entry.\n         *\n         * @private\n         */\n        this.cacheDidUpdate = async ({ cacheName, request }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                assert.isType(cacheName, 'string', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'cacheDidUpdate',\n                    paramName: 'cacheName',\n                });\n                assert.isInstance(request, Request, {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'cacheDidUpdate',\n                    paramName: 'request',\n                });\n            }\n            const cacheExpiration = this._getCacheExpiration(cacheName);\n            await cacheExpiration.updateTimestamp(request.url);\n            await cacheExpiration.expireEntries();\n        };\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(config.maxEntries || config.maxAgeSeconds)) {\n                throw new WorkboxError('max-entries-or-age-required', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.maxEntries) {\n                assert.isType(config.maxEntries, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                    paramName: 'config.maxEntries',\n                });\n            }\n            if (config.maxAgeSeconds) {\n                assert.isType(config.maxAgeSeconds, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                    paramName: 'config.maxAgeSeconds',\n                });\n            }\n        }\n        this._config = config;\n        this._maxAgeSeconds = config.maxAgeSeconds;\n        this._cacheExpirations = new Map();\n        if (config.purgeOnQuotaError) {\n            registerQuotaErrorCallback(() => this.deleteCacheAndMetadata());\n        }\n    }\n    /**\n     * A simple helper method to return a CacheExpiration instance for a given\n     * cache name.\n     *\n     * @param {string} cacheName\n     * @return {CacheExpiration}\n     *\n     * @private\n     */\n    _getCacheExpiration(cacheName) {\n        if (cacheName === cacheNames.getRuntimeName()) {\n            throw new WorkboxError('expire-custom-caches-only');\n        }\n        let cacheExpiration = this._cacheExpirations.get(cacheName);\n        if (!cacheExpiration) {\n            cacheExpiration = new CacheExpiration(cacheName, this._config);\n            this._cacheExpirations.set(cacheName, cacheExpiration);\n        }\n        return cacheExpiration;\n    }\n    /**\n     * @param {Response} cachedResponse\n     * @return {boolean}\n     *\n     * @private\n     */\n    _isResponseDateFresh(cachedResponse) {\n        if (!this._maxAgeSeconds) {\n            // We aren't expiring by age, so return true, it's fresh\n            return true;\n        }\n        // Check if the 'date' header will suffice a quick expiration check.\n        // See https://github.com/GoogleChromeLabs/sw-toolbox/issues/164 for\n        // discussion.\n        const dateHeaderTimestamp = this._getDateHeaderTimestamp(cachedResponse);\n        if (dateHeaderTimestamp === null) {\n            // Unable to parse date, so assume it's fresh.\n            return true;\n        }\n        // If we have a valid headerTime, then our response is fresh iff the\n        // headerTime plus maxAgeSeconds is greater than the current time.\n        const now = Date.now();\n        return dateHeaderTimestamp >= now - (this._maxAgeSeconds * 1000);\n    }\n    /**\n     * This method will extract the data header and parse it into a useful\n     * value.\n     *\n     * @param {Response} cachedResponse\n     * @return {number|null}\n     *\n     * @private\n     */\n    _getDateHeaderTimestamp(cachedResponse) {\n        if (!cachedResponse.headers.has('date')) {\n            return null;\n        }\n        const dateHeader = cachedResponse.headers.get('date');\n        const parsedDate = new Date(dateHeader);\n        const headerTime = parsedDate.getTime();\n        // If the Date header was invalid for some reason, parsedDate.getTime()\n        // will return NaN.\n        if (isNaN(headerTime)) {\n            return null;\n        }\n        return headerTime;\n    }\n    /**\n     * This is a helper method that performs two operations:\n     *\n     * - Deletes *all* the underlying Cache instances associated with this plugin\n     * instance, by calling caches.delete() on your behalf.\n     * - Deletes the metadata from IndexedDB used to keep track of expiration\n     * details for each Cache instance.\n     *\n     * When using cache expiration, calling this method is preferable to calling\n     * `caches.delete()` directly, since this will ensure that the IndexedDB\n     * metadata is also cleanly removed and open IndexedDB instances are deleted.\n     *\n     * Note that if you're *not* using cache expiration for a given cache, calling\n     * `caches.delete()` and passing in the cache's name should be sufficient.\n     * There is no Workbox-specific method needed for cleanup in that case.\n     */\n    async deleteCacheAndMetadata() {\n        // Do this one at a time instead of all at once via `Promise.all()` to\n        // reduce the chance of inconsistency if a promise rejects.\n        for (const [cacheName, cacheExpiration] of this._cacheExpirations) {\n            await self.caches.delete(cacheName);\n            await cacheExpiration.delete();\n        }\n        // Reset this._cacheExpirations to its initial state.\n        this._cacheExpirations = new Map();\n    }\n}\nexport { ExpirationPlugin };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { CacheExpiration } from './CacheExpiration.js';\nimport { ExpirationPlugin } from './ExpirationPlugin.js';\nimport './_version.js';\n/**\n * @module workbox-expiration\n */\nexport { CacheExpiration, ExpirationPlugin, };\n","export * from './index.js';","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:range-requests:6.0.2'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { assert } from 'workbox-core/_private/assert.js';\nimport '../_version.js';\n/**\n * @param {Blob} blob A source blob.\n * @param {number} [start] The offset to use as the start of the\n * slice.\n * @param {number} [end] The offset to use as the end of the slice.\n * @return {Object} An object with `start` and `end` properties, reflecting\n * the effective boundaries to use given the size of the blob.\n *\n * @private\n */\nfunction calculateEffectiveBoundaries(blob, start, end) {\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isInstance(blob, Blob, {\n            moduleName: 'workbox-range-requests',\n            funcName: 'calculateEffectiveBoundaries',\n            paramName: 'blob',\n        });\n    }\n    const blobSize = blob.size;\n    if ((end && end > blobSize) || (start && start < 0)) {\n        throw new WorkboxError('range-not-satisfiable', {\n            size: blobSize,\n            end,\n            start,\n        });\n    }\n    let effectiveStart;\n    let effectiveEnd;\n    if (start !== undefined && end !== undefined) {\n        effectiveStart = start;\n        // Range values are inclusive, so add 1 to the value.\n        effectiveEnd = end + 1;\n    }\n    else if (start !== undefined && end === undefined) {\n        effectiveStart = start;\n        effectiveEnd = blobSize;\n    }\n    else if (end !== undefined && start === undefined) {\n        effectiveStart = blobSize - end;\n        effectiveEnd = blobSize;\n    }\n    return {\n        start: effectiveStart,\n        end: effectiveEnd,\n    };\n}\nexport { calculateEffectiveBoundaries };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { assert } from 'workbox-core/_private/assert.js';\nimport '../_version.js';\n/**\n * @param {string} rangeHeader A Range: header value.\n * @return {Object} An object with `start` and `end` properties, reflecting\n * the parsed value of the Range: header. If either the `start` or `end` are\n * omitted, then `null` will be returned.\n *\n * @private\n */\nfunction parseRangeHeader(rangeHeader) {\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isType(rangeHeader, 'string', {\n            moduleName: 'workbox-range-requests',\n            funcName: 'parseRangeHeader',\n            paramName: 'rangeHeader',\n        });\n    }\n    const normalizedRangeHeader = rangeHeader.trim().toLowerCase();\n    if (!normalizedRangeHeader.startsWith('bytes=')) {\n        throw new WorkboxError('unit-must-be-bytes', { normalizedRangeHeader });\n    }\n    // Specifying multiple ranges separate by commas is valid syntax, but this\n    // library only attempts to handle a single, contiguous sequence of bytes.\n    // https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Range#Syntax\n    if (normalizedRangeHeader.includes(',')) {\n        throw new WorkboxError('single-range-only', { normalizedRangeHeader });\n    }\n    const rangeParts = /(\\d*)-(\\d*)/.exec(normalizedRangeHeader);\n    // We need either at least one of the start or end values.\n    if (!rangeParts || !(rangeParts[1] || rangeParts[2])) {\n        throw new WorkboxError('invalid-range-values', { normalizedRangeHeader });\n    }\n    return {\n        start: rangeParts[1] === '' ? undefined : Number(rangeParts[1]),\n        end: rangeParts[2] === '' ? undefined : Number(rangeParts[2]),\n    };\n}\nexport { parseRangeHeader };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { calculateEffectiveBoundaries } from './utils/calculateEffectiveBoundaries.js';\nimport { parseRangeHeader } from './utils/parseRangeHeader.js';\nimport './_version.js';\n/**\n * Given a `Request` and `Response` objects as input, this will return a\n * promise for a new `Response`.\n *\n * If the original `Response` already contains partial content (i.e. it has\n * a status of 206), then this assumes it already fulfills the `Range:`\n * requirements, and will return it as-is.\n *\n * @param {Request} request A request, which should contain a Range:\n * header.\n * @param {Response} originalResponse A response.\n * @return {Promise<Response>} Either a `206 Partial Content` response, with\n * the response body set to the slice of content specified by the request's\n * `Range:` header, or a `416 Range Not Satisfiable` response if the\n * conditions of the `Range:` header can't be met.\n *\n * @memberof module:workbox-range-requests\n */\nasync function createPartialResponse(request, originalResponse) {\n    try {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-range-requests',\n                funcName: 'createPartialResponse',\n                paramName: 'request',\n            });\n            assert.isInstance(originalResponse, Response, {\n                moduleName: 'workbox-range-requests',\n                funcName: 'createPartialResponse',\n                paramName: 'originalResponse',\n            });\n        }\n        if (originalResponse.status === 206) {\n            // If we already have a 206, then just pass it through as-is;\n            // see https://github.com/GoogleChrome/workbox/issues/1720\n            return originalResponse;\n        }\n        const rangeHeader = request.headers.get('range');\n        if (!rangeHeader) {\n            throw new WorkboxError('no-range-header');\n        }\n        const boundaries = parseRangeHeader(rangeHeader);\n        const originalBlob = await originalResponse.blob();\n        const effectiveBoundaries = calculateEffectiveBoundaries(originalBlob, boundaries.start, boundaries.end);\n        const slicedBlob = originalBlob.slice(effectiveBoundaries.start, effectiveBoundaries.end);\n        const slicedBlobSize = slicedBlob.size;\n        const slicedResponse = new Response(slicedBlob, {\n            // Status code 206 is for a Partial Content response.\n            // See https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/206\n            status: 206,\n            statusText: 'Partial Content',\n            headers: originalResponse.headers,\n        });\n        slicedResponse.headers.set('Content-Length', String(slicedBlobSize));\n        slicedResponse.headers.set('Content-Range', `bytes ${effectiveBoundaries.start}-${effectiveBoundaries.end - 1}/` +\n            originalBlob.size);\n        return slicedResponse;\n    }\n    catch (error) {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.warn(`Unable to construct a partial response; returning a ` +\n                `416 Range Not Satisfiable response instead.`);\n            logger.groupCollapsed(`View details here.`);\n            logger.log(error);\n            logger.log(request);\n            logger.log(originalResponse);\n            logger.groupEnd();\n        }\n        return new Response('', {\n            status: 416,\n            statusText: 'Range Not Satisfiable',\n        });\n    }\n}\nexport { createPartialResponse };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { createPartialResponse } from './createPartialResponse.js';\nimport './_version.js';\n/**\n * The range request plugin makes it easy for a request with a 'Range' header to\n * be fulfilled by a cached response.\n *\n * It does this by intercepting the `cachedResponseWillBeUsed` plugin callback\n * and returning the appropriate subset of the cached response body.\n *\n * @memberof module:workbox-range-requests\n */\nclass RangeRequestsPlugin {\n    constructor() {\n        /**\n         * @param {Object} options\n         * @param {Request} options.request The original request, which may or may not\n         * contain a Range: header.\n         * @param {Response} options.cachedResponse The complete cached response.\n         * @return {Promise<Response>} If request contains a 'Range' header, then a\n         * new response with status 206 whose body is a subset of `cachedResponse` is\n         * returned. Otherwise, `cachedResponse` is returned as-is.\n         *\n         * @private\n         */\n        this.cachedResponseWillBeUsed = async ({ request, cachedResponse }) => {\n            // Only return a sliced response if there's something valid in the cache,\n            // and there's a Range: header in the request.\n            if (cachedResponse && request.headers.has('range')) {\n                return await createPartialResponse(request, cachedResponse);\n            }\n            // If there was no Range: header, or if cachedResponse wasn't valid, just\n            // pass it through as-is.\n            return cachedResponse;\n        };\n    }\n}\nexport { RangeRequestsPlugin };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { createPartialResponse } from './createPartialResponse.js';\nimport { RangeRequestsPlugin } from './RangeRequestsPlugin.js';\nimport './_version.js';\n/**\n * @module workbox-range-requests\n */\nexport { createPartialResponse, RangeRequestsPlugin, };\n","export * from './index.js';","/*\n  Copyright 2020 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A utility method that makes it easier to use `event.waitUntil` with\n * async functions and return the result.\n *\n * @param {ExtendableEvent} event\n * @param {Function} asyncFn\n * @return {Function}\n * @private\n */\nfunction waitUntil(event, asyncFn) {\n    const returnPromise = asyncFn();\n    event.waitUntil(returnPromise);\n    return returnPromise;\n}\nexport { waitUntil };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:precaching:6.0.2'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport '../_version.js';\n// Name of the search parameter used to store revision info.\nconst REVISION_SEARCH_PARAM = '__WB_REVISION__';\n/**\n * Converts a manifest entry into a versioned URL suitable for precaching.\n *\n * @param {Object|string} entry\n * @return {string} A URL with versioning info.\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function createCacheKey(entry) {\n    if (!entry) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If a precache manifest entry is a string, it's assumed to be a versioned\n    // URL, like '/app.abcd1234.js'. Return as-is.\n    if (typeof entry === 'string') {\n        const urlObject = new URL(entry, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    const { revision, url } = entry;\n    if (!url) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If there's just a URL and no revision, then it's also assumed to be a\n    // versioned URL.\n    if (!revision) {\n        const urlObject = new URL(url, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    // Otherwise, construct a properly versioned URL using the custom Workbox\n    // search parameter along with the revision info.\n    const cacheKeyURL = new URL(url, location.href);\n    const originalURL = new URL(url, location.href);\n    cacheKeyURL.searchParams.set(REVISION_SEARCH_PARAM, revision);\n    return {\n        cacheKey: cacheKeyURL.href,\n        url: originalURL.href,\n    };\n}\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A plugin, designed to be used with PrecacheController, to determine the\n * of assets that were updated (or not updated) during the install event.\n *\n * @private\n */\nclass PrecacheInstallReportPlugin {\n    constructor() {\n        this.updatedURLs = [];\n        this.notUpdatedURLs = [];\n        this.handlerWillStart = async ({ request, state, }) => {\n            // TODO: `state` should never be undefined...\n            if (state) {\n                state.originalRequest = request;\n            }\n        };\n        this.cachedResponseWillBeUsed = async ({ event, state, cachedResponse, }) => {\n            if (event.type === 'install') {\n                // TODO: `state` should never be undefined...\n                const url = state.originalRequest.url;\n                if (cachedResponse) {\n                    this.notUpdatedURLs.push(url);\n                }\n                else {\n                    this.updatedURLs.push(url);\n                }\n            }\n            return cachedResponse;\n        };\n    }\n}\nexport { PrecacheInstallReportPlugin };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A plugin, designed to be used with PrecacheController, to translate URLs into\n * the corresponding cache key, based on the current revision info.\n *\n * @private\n */\nclass PrecacheCacheKeyPlugin {\n    constructor({ precacheController }) {\n        this.cacheKeyWillBeUsed = async ({ request, params, }) => {\n            const cacheKey = params && params.cacheKey ||\n                this._precacheController.getCacheKeyForURL(request.url);\n            return cacheKey ? new Request(cacheKey) : request;\n        };\n        this._precacheController = precacheController;\n    }\n}\nexport { PrecacheCacheKeyPlugin };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} deletedURLs\n *\n * @private\n */\nconst logGroup = (groupTitle, deletedURLs) => {\n    logger.groupCollapsed(groupTitle);\n    for (const url of deletedURLs) {\n        logger.log(url);\n    }\n    logger.groupEnd();\n};\n/**\n * @param {Array<string>} deletedURLs\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function printCleanupDetails(deletedURLs) {\n    const deletionCount = deletedURLs.length;\n    if (deletionCount > 0) {\n        logger.groupCollapsed(`During precaching cleanup, ` +\n            `${deletionCount} cached ` +\n            `request${deletionCount === 1 ? ' was' : 's were'} deleted.`);\n        logGroup('Deleted Cache Requests', deletedURLs);\n        logger.groupEnd();\n    }\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} urls\n *\n * @private\n */\nfunction _nestedGroup(groupTitle, urls) {\n    if (urls.length === 0) {\n        return;\n    }\n    logger.groupCollapsed(groupTitle);\n    for (const url of urls) {\n        logger.log(url);\n    }\n    logger.groupEnd();\n}\n/**\n * @param {Array<string>} urlsToPrecache\n * @param {Array<string>} urlsAlreadyPrecached\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function printInstallDetails(urlsToPrecache, urlsAlreadyPrecached) {\n    const precachedCount = urlsToPrecache.length;\n    const alreadyPrecachedCount = urlsAlreadyPrecached.length;\n    if (precachedCount || alreadyPrecachedCount) {\n        let message = `Precaching ${precachedCount} file${precachedCount === 1 ? '' : 's'}.`;\n        if (alreadyPrecachedCount > 0) {\n            message += ` ${alreadyPrecachedCount} ` +\n                `file${alreadyPrecachedCount === 1 ? ' is' : 's are'} already cached.`;\n        }\n        logger.groupCollapsed(message);\n        _nestedGroup(`View newly precached URLs.`, urlsToPrecache);\n        _nestedGroup(`View previously precached URLs.`, urlsAlreadyPrecached);\n        logger.groupEnd();\n    }\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nlet supportStatus;\n/**\n * A utility function that determines whether the current browser supports\n * constructing a new `Response` from a `response.body` stream.\n *\n * @return {boolean} `true`, if the current browser can successfully\n *     construct a `Response` from a `response.body` stream, `false` otherwise.\n *\n * @private\n */\nfunction canConstructResponseFromBodyStream() {\n    if (supportStatus === undefined) {\n        const testResponse = new Response('');\n        if ('body' in testResponse) {\n            try {\n                new Response(testResponse.body);\n                supportStatus = true;\n            }\n            catch (error) {\n                supportStatus = false;\n            }\n        }\n        supportStatus = false;\n    }\n    return supportStatus;\n}\nexport { canConstructResponseFromBodyStream };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { canConstructResponseFromBodyStream } from './_private/canConstructResponseFromBodyStream.js';\nimport { WorkboxError } from './_private/WorkboxError.js';\nimport './_version.js';\n/**\n * Allows developers to copy a response and modify its `headers`, `status`,\n * or `statusText` values (the values settable via a\n * [`ResponseInit`]{@link https://developer.mozilla.org/en-US/docs/Web/API/Response/Response#Syntax}\n * object in the constructor).\n * To modify these values, pass a function as the second argument. That\n * function will be invoked with a single object with the response properties\n * `{headers, status, statusText}`. The return value of this function will\n * be used as the `ResponseInit` for the new `Response`. To change the values\n * either modify the passed parameter(s) and return it, or return a totally\n * new object.\n *\n * This method is intentionally limited to same-origin responses, regardless of\n * whether CORS was used or not.\n *\n * @param {Response} response\n * @param {Function} modifier\n * @memberof module:workbox-core\n */\nasync function copyResponse(response, modifier) {\n    let origin = null;\n    // If response.url isn't set, assume it's cross-origin and keep origin null.\n    if (response.url) {\n        const responseURL = new URL(response.url);\n        origin = responseURL.origin;\n    }\n    if (origin !== self.location.origin) {\n        throw new WorkboxError('cross-origin-copy-response', { origin });\n    }\n    const clonedResponse = response.clone();\n    // Create a fresh `ResponseInit` object by cloning the headers.\n    const responseInit = {\n        headers: new Headers(clonedResponse.headers),\n        status: clonedResponse.status,\n        statusText: clonedResponse.statusText,\n    };\n    // Apply any user modifications.\n    const modifiedResponseInit = modifier ? modifier(responseInit) : responseInit;\n    // Create the new response from the body stream and `ResponseInit`\n    // modifications. Note: not all browsers support the Response.body stream,\n    // so fall back to reading the entire body into memory as a blob.\n    const body = canConstructResponseFromBodyStream() ?\n        clonedResponse.body : await clonedResponse.blob();\n    return new Response(body, modifiedResponseInit);\n}\nexport { copyResponse };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { copyResponse } from 'workbox-core/copyResponse.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from 'workbox-strategies/Strategy.js';\nimport './_version.js';\nconst copyRedirectedCacheableResponsesPlugin = {\n    async cacheWillUpdate({ response }) {\n        return response.redirected ? await copyResponse(response) : response;\n    }\n};\n/**\n * A [Strategy]{@link module:workbox-strategies.Strategy} implementation\n * specifically designed to work with\n * [PrecacheController]{@link module:workbox-precaching.PrecacheController}\n * to both cache and fetch precached assets.\n *\n * Note: an instance of this class is created automatically when creating a\n * `PrecacheController`; it's generally not necessary to create this yourself.\n *\n * @extends module:workbox-strategies.Strategy\n * @memberof module:workbox-precaching\n */\nclass PrecacheStrategy extends Strategy {\n    /**\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to the cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters}\n     * of all fetch() requests made by this strategy.\n     * @param {Object} [options.matchOptions] The\n     * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n     * for any `cache.match()` or `cache.put()` calls made by this strategy.\n     * @param {boolean} [options.fallbackToNetwork=true] Whether to attempt to\n     * get the response from the network if there's a precache miss.\n     */\n    constructor(options = {}) {\n        options.cacheName = cacheNames.getPrecacheName(options.cacheName);\n        super(options);\n        this._fallbackToNetwork = options.fallbackToNetwork === false ? false : true;\n        // Redirected responses cannot be used to satisfy a navigation request, so\n        // any redirected response must be \"copied\" rather than cloned, so the new\n        // response doesn't contain the `redirected` flag. See:\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=669363&desc=2#c1\n        this.plugins.push(copyRedirectedCacheableResponsesPlugin);\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {module:workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const response = await handler.cacheMatch(request);\n        if (!response) {\n            // If this is an `install` event then populate the cache. If this is a\n            // `fetch` event (or any other event) then respond with the cached\n            // response.\n            if (handler.event && handler.event.type === 'install') {\n                return await this._handleInstall(request, handler);\n            }\n            return await this._handleFetch(request, handler);\n        }\n        return response;\n    }\n    async _handleFetch(request, handler) {\n        let response;\n        // Fall back to the network if we don't have a cached response\n        // (perhaps due to manual cache cleanup).\n        if (this._fallbackToNetwork) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.warn(`The precached response for ` +\n                    `${getFriendlyURL(request.url)} in ${this.cacheName} was not ` +\n                    `found. Falling back to the network instead.`);\n            }\n            response = await handler.fetch(request);\n        }\n        else {\n            // This shouldn't normally happen, but there are edge cases:\n            // https://github.com/GoogleChrome/workbox/issues/1441\n            throw new WorkboxError('missing-precache-entry', {\n                cacheName: this.cacheName,\n                url: request.url,\n            });\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            const cacheKey = handler.params && handler.params.cacheKey ||\n                await handler.getCacheKey(request, 'read');\n            // Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Precaching is responding to: ` +\n                getFriendlyURL(request.url));\n            logger.log(`Serving the precached url: ${getFriendlyURL(cacheKey.url)}`);\n            logger.groupCollapsed(`View request details here.`);\n            logger.log(request);\n            logger.groupEnd();\n            logger.groupCollapsed(`View response details here.`);\n            logger.log(response);\n            logger.groupEnd();\n            logger.groupEnd();\n        }\n        return response;\n    }\n    async _handleInstall(request, handler) {\n        const response = await handler.fetchAndCachePut(request);\n        // Any time there's no response, consider it a precaching error.\n        let responseSafeToPrecache = Boolean(response);\n        // Also consider it an error if the user didn't pass their own\n        // cacheWillUpdate plugin, and the response is a 400+ (note: this means\n        // that by default opaque responses can be precached).\n        if (response && response.status >= 400 &&\n            !this._usesCustomCacheableResponseLogic()) {\n            responseSafeToPrecache = false;\n        }\n        if (!responseSafeToPrecache) {\n            // Throwing here will lead to the `install` handler failing, which\n            // we want to do if *any* of the responses aren't safe to cache.\n            throw new WorkboxError('bad-precaching-response', {\n                url: request.url,\n                status: response.status,\n            });\n        }\n        return response;\n    }\n    /**\n     * Returns true if any users plugins were added containing their own\n     * `cacheWillUpdate` callback.\n     *\n     * This method indicates whether the default cacheable response logic (i.e.\n     * <400, including opaque responses) should be used. If a custom plugin\n     * with a `cacheWillUpdate` callback is passed, then the strategy should\n     * defer to that plugin's logic.\n     *\n     * @private\n     */\n    _usesCustomCacheableResponseLogic() {\n        return this.plugins.some((plugin) => plugin.cacheWillUpdate &&\n            plugin !== copyRedirectedCacheableResponsesPlugin);\n    }\n}\nexport { PrecacheStrategy };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { waitUntil } from 'workbox-core/_private/waitUntil.js';\nimport { createCacheKey } from './utils/createCacheKey.js';\nimport { PrecacheInstallReportPlugin } from './utils/PrecacheInstallReportPlugin.js';\nimport { PrecacheCacheKeyPlugin } from './utils/PrecacheCacheKeyPlugin.js';\nimport { printCleanupDetails } from './utils/printCleanupDetails.js';\nimport { printInstallDetails } from './utils/printInstallDetails.js';\nimport { PrecacheStrategy } from './PrecacheStrategy.js';\nimport './_version.js';\n/**\n * Performs efficient precaching of assets.\n *\n * @memberof module:workbox-precaching\n */\nclass PrecacheController {\n    /**\n     * Create a new PrecacheController.\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] The cache to use for precaching.\n     * @param {string} [options.plugins] Plugins to use when precaching as well\n     * as responding to fetch events for precached assets.\n     * @param {boolean} [options.fallbackToNetwork=true] Whether to attempt to\n     * get the response from the network if there's a precache miss.\n     */\n    constructor({ cacheName, plugins = [], fallbackToNetwork = true } = {}) {\n        this._urlsToCacheKeys = new Map();\n        this._urlsToCacheModes = new Map();\n        this._cacheKeysToIntegrities = new Map();\n        this._strategy = new PrecacheStrategy({\n            cacheName: cacheNames.getPrecacheName(cacheName),\n            plugins: [\n                ...plugins,\n                new PrecacheCacheKeyPlugin({ precacheController: this }),\n            ],\n            fallbackToNetwork,\n        });\n        // Bind the install and activate methods to the instance.\n        this.install = this.install.bind(this);\n        this.activate = this.activate.bind(this);\n    }\n    /**\n     * @type {module:workbox-precaching.PrecacheStrategy} The strategy created by this controller and\n     * used to cache assets and respond to fetch events.\n     */\n    get strategy() {\n        return this._strategy;\n    }\n    /**\n     * Adds items to the precache list, removing any duplicates and\n     * stores the files in the\n     * [\"precache cache\"]{@link module:workbox-core.cacheNames} when the service\n     * worker installs.\n     *\n     * This method can be called multiple times.\n     *\n     * @param {Array<Object|string>} [entries=[]] Array of entries to precache.\n     */\n    precache(entries) {\n        this.addToCacheList(entries);\n        if (!this._installAndActiveListenersAdded) {\n            self.addEventListener('install', this.install);\n            self.addEventListener('activate', this.activate);\n            this._installAndActiveListenersAdded = true;\n        }\n    }\n    /**\n     * This method will add items to the precache list, removing duplicates\n     * and ensuring the information is valid.\n     *\n     * @param {Array<module:workbox-precaching.PrecacheController.PrecacheEntry|string>} entries\n     *     Array of entries to precache.\n     */\n    addToCacheList(entries) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isArray(entries, {\n                moduleName: 'workbox-precaching',\n                className: 'PrecacheController',\n                funcName: 'addToCacheList',\n                paramName: 'entries',\n            });\n        }\n        const urlsToWarnAbout = [];\n        for (const entry of entries) {\n            // See https://github.com/GoogleChrome/workbox/issues/2259\n            if (typeof entry === 'string') {\n                urlsToWarnAbout.push(entry);\n            }\n            else if (entry && entry.revision === undefined) {\n                urlsToWarnAbout.push(entry.url);\n            }\n            const { cacheKey, url } = createCacheKey(entry);\n            const cacheMode = (typeof entry !== 'string' && entry.revision) ?\n                'reload' : 'default';\n            if (this._urlsToCacheKeys.has(url) &&\n                this._urlsToCacheKeys.get(url) !== cacheKey) {\n                throw new WorkboxError('add-to-cache-list-conflicting-entries', {\n                    firstEntry: this._urlsToCacheKeys.get(url),\n                    secondEntry: cacheKey,\n                });\n            }\n            if (typeof entry !== 'string' && entry.integrity) {\n                if (this._cacheKeysToIntegrities.has(cacheKey) &&\n                    this._cacheKeysToIntegrities.get(cacheKey) !== entry.integrity) {\n                    throw new WorkboxError('add-to-cache-list-conflicting-integrities', {\n                        url,\n                    });\n                }\n                this._cacheKeysToIntegrities.set(cacheKey, entry.integrity);\n            }\n            this._urlsToCacheKeys.set(url, cacheKey);\n            this._urlsToCacheModes.set(url, cacheMode);\n            if (urlsToWarnAbout.length > 0) {\n                const warningMessage = `Workbox is precaching URLs without revision ` +\n                    `info: ${urlsToWarnAbout.join(', ')}\\nThis is generally NOT safe. ` +\n                    `Learn more at https://bit.ly/wb-precache`;\n                if (process.env.NODE_ENV === 'production') {\n                    // Use console directly to display this warning without bloating\n                    // bundle sizes by pulling in all of the logger codebase in prod.\n                    console.warn(warningMessage);\n                }\n                else {\n                    logger.warn(warningMessage);\n                }\n            }\n        }\n    }\n    /**\n     * Precaches new and updated assets. Call this method from the service worker\n     * install event.\n     *\n     * Note: this method calls `event.waitUntil()` for you, so you do not need\n     * to call it yourself in your event handlers.\n     *\n     * @param {Object} options\n     * @param {Event} options.event The install event.\n     * @return {Promise<module:workbox-precaching.InstallResult>}\n     */\n    install(event) {\n        return waitUntil(event, async () => {\n            const installReportPlugin = new PrecacheInstallReportPlugin();\n            this.strategy.plugins.push(installReportPlugin);\n            // Cache entries one at a time.\n            // See https://github.com/GoogleChrome/workbox/issues/2528\n            for (const [url, cacheKey] of this._urlsToCacheKeys) {\n                const integrity = this._cacheKeysToIntegrities.get(cacheKey);\n                const cacheMode = this._urlsToCacheModes.get(url);\n                const request = new Request(url, {\n                    integrity,\n                    cache: cacheMode,\n                    credentials: 'same-origin',\n                });\n                await Promise.all(this.strategy.handleAll({\n                    params: { cacheKey },\n                    request,\n                    event,\n                }));\n            }\n            const { updatedURLs, notUpdatedURLs } = installReportPlugin;\n            if (process.env.NODE_ENV !== 'production') {\n                printInstallDetails(updatedURLs, notUpdatedURLs);\n            }\n            return { updatedURLs, notUpdatedURLs };\n        });\n    }\n    /**\n     * Deletes assets that are no longer present in the current precache manifest.\n     * Call this method from the service worker activate event.\n     *\n     * Note: this method calls `event.waitUntil()` for you, so you do not need\n     * to call it yourself in your event handlers.\n     *\n     * @param {ExtendableEvent}\n     * @return {Promise<module:workbox-precaching.CleanupResult>}\n     */\n    activate(event) {\n        return waitUntil(event, async () => {\n            const cache = await self.caches.open(this.strategy.cacheName);\n            const currentlyCachedRequests = await cache.keys();\n            const expectedCacheKeys = new Set(this._urlsToCacheKeys.values());\n            const deletedURLs = [];\n            for (const request of currentlyCachedRequests) {\n                if (!expectedCacheKeys.has(request.url)) {\n                    await cache.delete(request);\n                    deletedURLs.push(request.url);\n                }\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                printCleanupDetails(deletedURLs);\n            }\n            return { deletedURLs };\n        });\n    }\n    /**\n     * Returns a mapping of a precached URL to the corresponding cache key, taking\n     * into account the revision information for the URL.\n     *\n     * @return {Map<string, string>} A URL to cache key mapping.\n     */\n    getURLsToCacheKeys() {\n        return this._urlsToCacheKeys;\n    }\n    /**\n     * Returns a list of all the URLs that have been precached by the current\n     * service worker.\n     *\n     * @return {Array<string>} The precached URLs.\n     */\n    getCachedURLs() {\n        return [...this._urlsToCacheKeys.keys()];\n    }\n    /**\n     * Returns the cache key used for storing a given URL. If that URL is\n     * unversioned, like `/index.html', then the cache key will be the original\n     * URL with a search parameter appended to it.\n     *\n     * @param {string} url A URL whose cache key you want to look up.\n     * @return {string} The versioned URL that corresponds to a cache key\n     * for the original URL, or undefined if that URL isn't precached.\n     */\n    getCacheKeyForURL(url) {\n        const urlObject = new URL(url, location.href);\n        return this._urlsToCacheKeys.get(urlObject.href);\n    }\n    /**\n     * This acts as a drop-in replacement for\n     * [`cache.match()`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/match)\n     * with the following differences:\n     *\n     * - It knows what the name of the precache is, and only checks in that cache.\n     * - It allows you to pass in an \"original\" URL without versioning parameters,\n     * and it will automatically look up the correct cache key for the currently\n     * active revision of that URL.\n     *\n     * E.g., `matchPrecache('index.html')` will find the correct precached\n     * response for the currently active service worker, even if the actual cache\n     * key is `'/index.html?__WB_REVISION__=1234abcd'`.\n     *\n     * @param {string|Request} request The key (without revisioning parameters)\n     * to look up in the precache.\n     * @return {Promise<Response|undefined>}\n     */\n    async matchPrecache(request) {\n        const url = request instanceof Request ? request.url : request;\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (cacheKey) {\n            const cache = await self.caches.open(this.strategy.cacheName);\n            return cache.match(cacheKey);\n        }\n        return undefined;\n    }\n    /**\n     * Returns a function that looks up `url` in the precache (taking into\n     * account revision information), and returns the corresponding `Response`.\n     *\n     * @param {string} url The precached URL which will be used to lookup the\n     * `Response`.\n     * @return {module:workbox-routing~handlerCallback}\n     */\n    createHandlerBoundToURL(url) {\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (!cacheKey) {\n            throw new WorkboxError('non-precached-url', { url });\n        }\n        return (options) => {\n            options.request = new Request(url);\n            options.params = { cacheKey, ...options.params };\n            return this.strategy.handle(options);\n        };\n    }\n}\nexport { PrecacheController };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { PrecacheController } from '../PrecacheController.js';\nimport '../_version.js';\nlet precacheController;\n/**\n * @return {PrecacheController}\n * @private\n */\nexport const getOrCreatePrecacheController = () => {\n    if (!precacheController) {\n        precacheController = new PrecacheController();\n    }\n    return precacheController;\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Adds plugins to the precaching strategy.\n *\n * @param {Array<Object>} plugins\n *\n * @memberof module:workbox-precaching\n */\nfunction addPlugins(plugins) {\n    const precacheController = getOrCreatePrecacheController();\n    precacheController.strategy.plugins.push(...plugins);\n}\nexport { addPlugins };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Removes any URL search parameters that should be ignored.\n *\n * @param {URL} urlObject The original URL.\n * @param {Array<RegExp>} ignoreURLParametersMatching RegExps to test against\n * each search parameter name. Matches mean that the search parameter should be\n * ignored.\n * @return {URL} The URL with any ignored search parameters removed.\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching = []) {\n    // Convert the iterable into an array at the start of the loop to make sure\n    // deletion doesn't mess up iteration.\n    for (const paramName of [...urlObject.searchParams.keys()]) {\n        if (ignoreURLParametersMatching.some((regExp) => regExp.test(paramName))) {\n            urlObject.searchParams.delete(paramName);\n        }\n    }\n    return urlObject;\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { removeIgnoredSearchParams } from './removeIgnoredSearchParams.js';\nimport '../_version.js';\n/**\n * Generator function that yields possible variations on the original URL to\n * check, one at a time.\n *\n * @param {string} url\n * @param {Object} options\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function* generateURLVariations(url, { ignoreURLParametersMatching = [/^utm_/, /^fbclid$/], directoryIndex = 'index.html', cleanURLs = true, urlManipulation, } = {}) {\n    const urlObject = new URL(url, location.href);\n    urlObject.hash = '';\n    yield urlObject.href;\n    const urlWithoutIgnoredParams = removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching);\n    yield urlWithoutIgnoredParams.href;\n    if (directoryIndex && urlWithoutIgnoredParams.pathname.endsWith('/')) {\n        const directoryURL = new URL(urlWithoutIgnoredParams.href);\n        directoryURL.pathname += directoryIndex;\n        yield directoryURL.href;\n    }\n    if (cleanURLs) {\n        const cleanURL = new URL(urlWithoutIgnoredParams.href);\n        cleanURL.pathname += '.html';\n        yield cleanURL.href;\n    }\n    if (urlManipulation) {\n        const additionalURLs = urlManipulation({ url: urlObject });\n        for (const urlToAttempt of additionalURLs) {\n            yield urlToAttempt.href;\n        }\n    }\n}\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { Route } from 'workbox-routing/Route.js';\nimport { generateURLVariations } from './utils/generateURLVariations.js';\nimport './_version.js';\n/**\n * A subclass of [Route]{@link module:workbox-routing.Route} that takes a\n * [PrecacheController]{@link module:workbox-precaching.PrecacheController}\n * instance and uses it to match incoming requests and handle fetching\n * responses from the precache.\n *\n * @memberof module:workbox-precaching\n * @extends module:workbox-routing.Route\n */\nclass PrecacheRoute extends Route {\n    /**\n     * @param {PrecacheController} precacheController A `PrecacheController`\n     * instance used to both match requests and respond to fetch events.\n     * @param {Object} [options] Options to control how requests are matched\n     * against the list of precached URLs.\n     * @param {string} [options.directoryIndex=index.html] The `directoryIndex` will\n     * check cache entries for a URLs ending with '/' to see if there is a hit when\n     * appending the `directoryIndex` value.\n     * @param {Array<RegExp>} [options.ignoreURLParametersMatching=[/^utm_/, /^fbclid$/]] An\n     * array of regex's to remove search params when looking for a cache match.\n     * @param {boolean} [options.cleanURLs=true] The `cleanURLs` option will\n     * check the cache for the URL with a `.html` added to the end of the end.\n     * @param {module:workbox-precaching~urlManipulation} [options.urlManipulation]\n     * This is a function that should take a URL and return an array of\n     * alternative URLs that should be checked for precache matches.\n     */\n    constructor(precacheController, options) {\n        const match = ({ request }) => {\n            const urlsToCacheKeys = precacheController.getURLsToCacheKeys();\n            for (const possibleURL of generateURLVariations(request.url, options)) {\n                const cacheKey = urlsToCacheKeys.get(possibleURL);\n                if (cacheKey) {\n                    return { cacheKey };\n                }\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Precaching did not find a match for ` +\n                    getFriendlyURL(request.url));\n            }\n            return;\n        };\n        super(match, precacheController.strategy);\n    }\n}\nexport { PrecacheRoute };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { registerRoute } from 'workbox-routing/registerRoute.js';\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport { PrecacheRoute } from './PrecacheRoute.js';\nimport './_version.js';\n/**\n * Add a `fetch` listener to the service worker that will\n * respond to\n * [network requests]{@link https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers#Custom_responses_to_requests}\n * with precached assets.\n *\n * Requests for assets that aren't precached, the `FetchEvent` will not be\n * responded to, allowing the event to fall through to other `fetch` event\n * listeners.\n *\n * @param {Object} [options] See\n * [PrecacheRoute options]{@link module:workbox-precaching.PrecacheRoute}.\n *\n * @memberof module:workbox-precaching\n */\nfunction addRoute(options) {\n    const precacheController = getOrCreatePrecacheController();\n    const precacheRoute = new PrecacheRoute(precacheController, options);\n    registerRoute(precacheRoute);\n}\nexport { addRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst SUBSTRING_TO_FIND = '-precache-';\n/**\n * Cleans up incompatible precaches that were created by older versions of\n * Workbox, by a service worker registered under the current scope.\n *\n * This is meant to be called as part of the `activate` event.\n *\n * This should be safe to use as long as you don't include `substringToFind`\n * (defaulting to `-precache-`) in your non-precache cache names.\n *\n * @param {string} currentPrecacheName The cache name currently in use for\n * precaching. This cache won't be deleted.\n * @param {string} [substringToFind='-precache-'] Cache names which include this\n * substring will be deleted (excluding `currentPrecacheName`).\n * @return {Array<string>} A list of all the cache names that were deleted.\n *\n * @private\n * @memberof module:workbox-precaching\n */\nconst deleteOutdatedCaches = async (currentPrecacheName, substringToFind = SUBSTRING_TO_FIND) => {\n    const cacheNames = await self.caches.keys();\n    const cacheNamesToDelete = cacheNames.filter((cacheName) => {\n        return cacheName.includes(substringToFind) &&\n            cacheName.includes(self.registration.scope) &&\n            cacheName !== currentPrecacheName;\n    });\n    await Promise.all(cacheNamesToDelete.map((cacheName) => self.caches.delete(cacheName)));\n    return cacheNamesToDelete;\n};\nexport { deleteOutdatedCaches };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { deleteOutdatedCaches } from './utils/deleteOutdatedCaches.js';\nimport './_version.js';\n/**\n * Adds an `activate` event listener which will clean up incompatible\n * precaches that were created by older versions of Workbox.\n *\n * @memberof module:workbox-precaching\n */\nfunction cleanupOutdatedCaches() {\n    // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n    self.addEventListener('activate', ((event) => {\n        const cacheName = cacheNames.getPrecacheName();\n        event.waitUntil(deleteOutdatedCaches(cacheName).then((cachesDeleted) => {\n            if (process.env.NODE_ENV !== 'production') {\n                if (cachesDeleted.length > 0) {\n                    logger.log(`The following out-of-date precaches were cleaned up ` +\n                        `automatically:`, cachesDeleted);\n                }\n            }\n        }));\n    }));\n}\nexport { cleanupOutdatedCaches };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Helper function that calls\n * {@link PrecacheController#createHandlerBoundToURL} on the default\n * {@link PrecacheController} instance.\n *\n * If you are creating your own {@link PrecacheController}, then call the\n * {@link PrecacheController#createHandlerBoundToURL} on that instance,\n * instead of using this function.\n *\n * @param {string} url The precached URL which will be used to lookup the\n * `Response`.\n * @param {boolean} [fallbackToNetwork=true] Whether to attempt to get the\n * response from the network if there's a precache miss.\n * @return {module:workbox-routing~handlerCallback}\n *\n * @memberof module:workbox-precaching\n */\nfunction createHandlerBoundToURL(url) {\n    const precacheController = getOrCreatePrecacheController();\n    return precacheController.createHandlerBoundToURL(url);\n}\nexport { createHandlerBoundToURL };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Takes in a URL, and returns the corresponding URL that could be used to\n * lookup the entry in the precache.\n *\n * If a relative URL is provided, the location of the service worker file will\n * be used as the base.\n *\n * For precached entries without revision information, the cache key will be the\n * same as the original URL.\n *\n * For precached entries with revision information, the cache key will be the\n * original URL with the addition of a query parameter used for keeping track of\n * the revision info.\n *\n * @param {string} url The URL whose cache key to look up.\n * @return {string} The cache key that corresponds to that URL.\n *\n * @memberof module:workbox-precaching\n */\nfunction getCacheKeyForURL(url) {\n    const precacheController = getOrCreatePrecacheController();\n    return precacheController.getCacheKeyForURL(url);\n}\nexport { getCacheKeyForURL };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Helper function that calls\n * {@link PrecacheController#matchPrecache} on the default\n * {@link PrecacheController} instance.\n *\n * If you are creating your own {@link PrecacheController}, then call\n * {@link PrecacheController#matchPrecache} on that instance,\n * instead of using this function.\n *\n * @param {string|Request} request The key (without revisioning parameters)\n * to look up in the precache.\n * @return {Promise<Response|undefined>}\n *\n * @memberof module:workbox-precaching\n */\nfunction matchPrecache(request) {\n    const precacheController = getOrCreatePrecacheController();\n    return precacheController.matchPrecache(request);\n}\nexport { matchPrecache };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Adds items to the precache list, removing any duplicates and\n * stores the files in the\n * [\"precache cache\"]{@link module:workbox-core.cacheNames} when the service\n * worker installs.\n *\n * This method can be called multiple times.\n *\n * Please note: This method **will not** serve any of the cached files for you.\n * It only precaches files. To respond to a network request you call\n * [addRoute()]{@link module:workbox-precaching.addRoute}.\n *\n * If you have a single array of files to precache, you can just call\n * [precacheAndRoute()]{@link module:workbox-precaching.precacheAndRoute}.\n *\n * @param {Array<Object|string>} [entries=[]] Array of entries to precache.\n *\n * @memberof module:workbox-precaching\n */\nfunction precache(entries) {\n    const precacheController = getOrCreatePrecacheController();\n    precacheController.precache(entries);\n}\nexport { precache };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { addRoute } from './addRoute.js';\nimport { precache } from './precache.js';\nimport './_version.js';\n/**\n * This method will add entries to the precache list and add a route to\n * respond to fetch events.\n *\n * This is a convenience method that will call\n * [precache()]{@link module:workbox-precaching.precache} and\n * [addRoute()]{@link module:workbox-precaching.addRoute} in a single call.\n *\n * @param {Array<Object|string>} entries Array of entries to precache.\n * @param {Object} [options] See\n * [PrecacheRoute options]{@link module:workbox-precaching.PrecacheRoute}.\n *\n * @memberof module:workbox-precaching\n */\nfunction precacheAndRoute(entries, options) {\n    precache(entries);\n    addRoute(options);\n}\nexport { precacheAndRoute };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * `PrecacheFallbackPlugin` allows you to specify an \"offline fallback\"\n * response to be used when a given strategy is unable to generate a response.\n *\n * It does this by intercepting the `handlerDidError` plugin callback\n * and returning a precached response, taking the expected revision parameter\n * into account automatically.\n *\n * Unless you explicitly pass in a `PrecacheController` instance to the\n * constructor, the default instance will be used. Generally speaking, most\n * developers will end up using the default.\n *\n * @memberof module:workbox-precaching\n */\nclass PrecacheFallbackPlugin {\n    /**\n     * Constructs a new PrecacheFallbackPlugin with the associated fallbackURL.\n     *\n     * @param {Object} config\n     * @param {string} config.fallbackURL A precached URL to use as the fallback\n     *     if the associated strategy can't generate a response.\n     * @param {PrecacheController} [config.precacheController] An optional\n     *     PrecacheController instance. If not provided, the default\n     *     PrecacheController will be used.\n     */\n    constructor({ fallbackURL, precacheController }) {\n        /**\n         * @return {Promise<Response>} The precache response for the fallback URL.\n         *\n         * @private\n         */\n        this.handlerDidError = () => this._precacheController.matchPrecache(this._fallbackURL);\n        this._fallbackURL = fallbackURL;\n        this._precacheController = precacheController ||\n            getOrCreatePrecacheController();\n    }\n}\nexport { PrecacheFallbackPlugin };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { addPlugins } from './addPlugins.js';\nimport { addRoute } from './addRoute.js';\nimport { cleanupOutdatedCaches } from './cleanupOutdatedCaches.js';\nimport { createHandlerBoundToURL } from './createHandlerBoundToURL.js';\nimport { getCacheKeyForURL } from './getCacheKeyForURL.js';\nimport { matchPrecache } from './matchPrecache.js';\nimport { precache } from './precache.js';\nimport { precacheAndRoute } from './precacheAndRoute.js';\nimport { PrecacheController } from './PrecacheController.js';\nimport { PrecacheRoute } from './PrecacheRoute.js';\nimport { PrecacheStrategy } from './PrecacheStrategy.js';\nimport { PrecacheFallbackPlugin } from './PrecacheFallbackPlugin.js';\nimport './_version.js';\n/**\n * Most consumers of this module will want to use the\n * [precacheAndRoute()]{@link module:workbox-precaching.precacheAndRoute}\n * method to add assets to the cache and respond to network requests with these\n * cached assets.\n *\n * If you require more control over caching and routing, you can use the\n * [PrecacheController]{@link module:workbox-precaching.PrecacheController}\n * interface.\n *\n * @module workbox-precaching\n */\nexport { addPlugins, addRoute, cleanupOutdatedCaches, createHandlerBoundToURL, getCacheKeyForURL, matchPrecache, precache, precacheAndRoute, PrecacheController, PrecacheRoute, PrecacheStrategy, PrecacheFallbackPlugin, };\n","export * from './index.js';","import {registerRoute} from 'workbox-routing';\nimport {CacheFirst, NetworkFirst, StaleWhileRevalidate,} from 'workbox-strategies';\n\n// Used for filtering matches based on status code, header, or both\nimport {CacheableResponsePlugin} from 'workbox-cacheable-response';\n// Used to limit entries in cache, remove entries after a certain period of time\nimport {ExpirationPlugin} from 'workbox-expiration';\nimport {RangeRequestsPlugin} from 'workbox-range-requests';\nimport {precacheAndRoute} from 'workbox-precaching';\n\n// Use with precache injection\nprecacheAndRoute([\n  {url: '/index.html', revision: '383676'},\n]);\n\n// Cache page navigations (html) with a Network First strategy\nregisterRoute(\n  // Check to see if the request is a navigation to a new page\n  ({request}) => request.mode === 'navigate',\n  // Use a Network First caching strategy\n  new NetworkFirst({\n    // Put all cached files in a cache named 'pages'\n    cacheName: 'pages',\n    plugins: [\n      // Ensure that only requests that result in a 200 status are cached\n      new CacheableResponsePlugin({\n        statuses: [200],\n      }),\n    ],\n  }),\n);\n\n// In your service worker:\n// It's up to you to either precache or explicitly call cache.add('movie.mp4')\n// to populate the cache.\n//\n// This route will go against the network if there isn't a cache match,\n// but it won't populate the cache at runtime.\n// If there is a cache match, then it will properly serve partial responses.\nregisterRoute(\n  ({url}) => url.pathname.endsWith('.mp4'),\n  new CacheFirst({\n    cacheName: 'mp4-cache',\n    plugins: [\n      new CacheableResponsePlugin({statuses: [200]}),\n      new RangeRequestsPlugin(),\n    ],\n  }),\n);\n\n// Cache CSS, JS, and Web Worker requests with a Stale While Revalidate strategy\nregisterRoute(\n  // Check to see if the request's destination is style for stylesheets, script for JavaScript, or worker for web worker\n  ({request}) =>\n    request.destination === 'style' ||\n    request.destination === 'script' ||\n    request.destination === 'worker',\n  // Use a Stale While Revalidate caching strategy\n  new StaleWhileRevalidate({\n    // Put all cached files in a cache named 'assets'\n    cacheName: 'assets',\n    plugins: [\n      // Ensure that only requests that result in a 200 status are cached\n      new CacheableResponsePlugin({\n        statuses: [200],\n      }),\n    ],\n  }),\n);\n\n// Cache images with a Cache First strategy\nregisterRoute(\n  // Check to see if the request's destination is style for an image\n  ({request, url}) => request.destination === 'image' && !url.pathname.endsWith('.mp4'),\n  // Use a Cache First caching strategy\n  new CacheFirst({\n    // Put all cached files in a cache named 'images'\n    cacheName: 'images',\n    plugins: [\n      // Ensure that only requests that result in a 200 status are cached\n      new CacheableResponsePlugin({\n        statuses: [200],\n      }),\n      // Don't cache more than 50 items, and expire them after 30 days\n      new ExpirationPlugin({\n        maxEntries: 50,\n        maxAgeSeconds: 60 * 60 * 24 * 30, // 30 Days\n      }),\n    ],\n  }),\n);\n\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}